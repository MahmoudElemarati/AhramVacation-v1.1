package com.ahramattend.www._0_0_0_2_0_DB_Entities;
// Generated Mar 9, 2021 2:52:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * PerJobCode generated by hbm2java
 */
@Entity
@Table(name="PER_JOB_CODE"
    ,schema="SHAMS"
    , uniqueConstraints = @UniqueConstraint(columnNames={"GROUP_TYPE_CODE", "FISCAL_DEGREE_CODE", "JOB_CODE"}) 
)
public class PerJobCode  implements java.io.Serializable {


     private String jobCode;
     private PerFiscalDegreeCodeNew perFiscalDegreeCodeNew;
     private PerFiscalDegreeCode perFiscalDegreeCode;
     private PerGroupDegree perGroupDegree;
     private PerGroupTypeCode perGroupTypeCode;
     private PerJobTypeCode perJobTypeCode;
     private Date fiscalYear;
     private String jobName;
     private String jobDesc;
     private String jobExperiance;
     private String jobTask;
     private String recordCreateUser;
     private Date recordCreateDate;
     private String recordUpdateUser;
     private Date recordUpdateDate;
     private String jobCodeReal;
     private Boolean chkJoin;
     private Integer agz;
     private Set<PerEmpPromotionRejectNew> perEmpPromotionRejectNews = new HashSet<PerEmpPromotionRejectNew>(0);
     private Set<PerJobDetail> perJobDetails = new HashSet<PerJobDetail>(0);
     private Set<PerHumanBalJobDistribute> perHumanBalJobDistributes = new HashSet<PerHumanBalJobDistribute>(0);
     private Set<PerPromotionTrans> perPromotionTranses = new HashSet<PerPromotionTrans>(0);
     private Set<PerAnnualEvalEmp> perAnnualEvalEmps = new HashSet<PerAnnualEvalEmp>(0);
     private Set<PerAnnualEvalModelEmp> perAnnualEvalModelEmps = new HashSet<PerAnnualEvalModelEmp>(0);
     private Set<PerHumanBalJobNew> perHumanBalJobNews = new HashSet<PerHumanBalJobNew>(0);
     private Set<PerEmpHistory> perEmpHistoriesForJobCode = new HashSet<PerEmpHistory>(0);
     private Set<PerPromotionTransNew> perPromotionTransNews = new HashSet<PerPromotionTransNew>(0);
     private Set<PerHumanBalJobDistributeN> perHumanBalJobDistributeNs = new HashSet<PerHumanBalJobDistributeN>(0);
     private Set<PerEmploymentMasters> perEmploymentMastersesForJobCodeTransfer = new HashSet<PerEmploymentMasters>(0);
     private Set<PerElawaTransaction> perElawaTransactions = new HashSet<PerElawaTransaction>(0);
     private Set<PerEmpPromotion> perEmpPromotionsForJobCodeNew = new HashSet<PerEmpPromotion>(0);
     private Set<PerHumanBalJob> perHumanBalJobs = new HashSet<PerHumanBalJob>(0);
     private Set<PerEmpPromotionNew> perEmpPromotionNewsForJobCodeNew = new HashSet<PerEmpPromotionNew>(0);
     private Set<PerEmploymentMasters> perEmploymentMastersesForJobCode = new HashSet<PerEmploymentMasters>(0);
     private Set<PerEmpPromotion> perEmpPromotionsForJobCode = new HashSet<PerEmpPromotion>(0);
     private Set<PerEmpPromotionNew> perEmpPromotionNewsForJobCode = new HashSet<PerEmpPromotionNew>(0);
     private Set<PerElawaTransactionReject> perElawaTransactionRejects = new HashSet<PerElawaTransactionReject>(0);
     private Set<PerAnnualEvalModEmpTot> perAnnualEvalModEmpTots = new HashSet<PerAnnualEvalModEmpTot>(0);
     private Set<PerEmpHistory> perEmpHistoriesForJobCodeTransfer = new HashSet<PerEmpHistory>(0);

    public PerJobCode() {
    }

	
    public PerJobCode(String jobCode, PerJobTypeCode perJobTypeCode, Date fiscalYear, String jobName) {
        this.jobCode = jobCode;
        this.perJobTypeCode = perJobTypeCode;
        this.fiscalYear = fiscalYear;
        this.jobName = jobName;
    }
    public PerJobCode(String jobCode, PerFiscalDegreeCodeNew perFiscalDegreeCodeNew, PerFiscalDegreeCode perFiscalDegreeCode, PerGroupDegree perGroupDegree, PerGroupTypeCode perGroupTypeCode, PerJobTypeCode perJobTypeCode, Date fiscalYear, String jobName, String jobDesc, String jobExperiance, String jobTask, String recordCreateUser, Date recordCreateDate, String recordUpdateUser, Date recordUpdateDate, String jobCodeReal, Boolean chkJoin, Integer agz, Set<PerEmpPromotionRejectNew> perEmpPromotionRejectNews, Set<PerJobDetail> perJobDetails, Set<PerHumanBalJobDistribute> perHumanBalJobDistributes, Set<PerPromotionTrans> perPromotionTranses, Set<PerAnnualEvalEmp> perAnnualEvalEmps, Set<PerAnnualEvalModelEmp> perAnnualEvalModelEmps, Set<PerHumanBalJobNew> perHumanBalJobNews, Set<PerEmpHistory> perEmpHistoriesForJobCode, Set<PerPromotionTransNew> perPromotionTransNews, Set<PerHumanBalJobDistributeN> perHumanBalJobDistributeNs, Set<PerEmploymentMasters> perEmploymentMastersesForJobCodeTransfer, Set<PerElawaTransaction> perElawaTransactions, Set<PerEmpPromotion> perEmpPromotionsForJobCodeNew, Set<PerHumanBalJob> perHumanBalJobs, Set<PerEmpPromotionNew> perEmpPromotionNewsForJobCodeNew, Set<PerEmploymentMasters> perEmploymentMastersesForJobCode, Set<PerEmpPromotion> perEmpPromotionsForJobCode, Set<PerEmpPromotionNew> perEmpPromotionNewsForJobCode, Set<PerElawaTransactionReject> perElawaTransactionRejects, Set<PerAnnualEvalModEmpTot> perAnnualEvalModEmpTots, Set<PerEmpHistory> perEmpHistoriesForJobCodeTransfer) {
       this.jobCode = jobCode;
       this.perFiscalDegreeCodeNew = perFiscalDegreeCodeNew;
       this.perFiscalDegreeCode = perFiscalDegreeCode;
       this.perGroupDegree = perGroupDegree;
       this.perGroupTypeCode = perGroupTypeCode;
       this.perJobTypeCode = perJobTypeCode;
       this.fiscalYear = fiscalYear;
       this.jobName = jobName;
       this.jobDesc = jobDesc;
       this.jobExperiance = jobExperiance;
       this.jobTask = jobTask;
       this.recordCreateUser = recordCreateUser;
       this.recordCreateDate = recordCreateDate;
       this.recordUpdateUser = recordUpdateUser;
       this.recordUpdateDate = recordUpdateDate;
       this.jobCodeReal = jobCodeReal;
       this.chkJoin = chkJoin;
       this.agz = agz;
       this.perEmpPromotionRejectNews = perEmpPromotionRejectNews;
       this.perJobDetails = perJobDetails;
       this.perHumanBalJobDistributes = perHumanBalJobDistributes;
       this.perPromotionTranses = perPromotionTranses;
       this.perAnnualEvalEmps = perAnnualEvalEmps;
       this.perAnnualEvalModelEmps = perAnnualEvalModelEmps;
       this.perHumanBalJobNews = perHumanBalJobNews;
       this.perEmpHistoriesForJobCode = perEmpHistoriesForJobCode;
       this.perPromotionTransNews = perPromotionTransNews;
       this.perHumanBalJobDistributeNs = perHumanBalJobDistributeNs;
       this.perEmploymentMastersesForJobCodeTransfer = perEmploymentMastersesForJobCodeTransfer;
       this.perElawaTransactions = perElawaTransactions;
       this.perEmpPromotionsForJobCodeNew = perEmpPromotionsForJobCodeNew;
       this.perHumanBalJobs = perHumanBalJobs;
       this.perEmpPromotionNewsForJobCodeNew = perEmpPromotionNewsForJobCodeNew;
       this.perEmploymentMastersesForJobCode = perEmploymentMastersesForJobCode;
       this.perEmpPromotionsForJobCode = perEmpPromotionsForJobCode;
       this.perEmpPromotionNewsForJobCode = perEmpPromotionNewsForJobCode;
       this.perElawaTransactionRejects = perElawaTransactionRejects;
       this.perAnnualEvalModEmpTots = perAnnualEvalModEmpTots;
       this.perEmpHistoriesForJobCodeTransfer = perEmpHistoriesForJobCodeTransfer;
    }
   
     @Id 

    
    @Column(name="JOB_CODE", unique=true, nullable=false, length=5)
    public String getJobCode() {
        return this.jobCode;
    }
    
    public void setJobCode(String jobCode) {
        this.jobCode = jobCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FISCAL_DEGREE_CODE_NEW")
    public PerFiscalDegreeCodeNew getPerFiscalDegreeCodeNew() {
        return this.perFiscalDegreeCodeNew;
    }
    
    public void setPerFiscalDegreeCodeNew(PerFiscalDegreeCodeNew perFiscalDegreeCodeNew) {
        this.perFiscalDegreeCodeNew = perFiscalDegreeCodeNew;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FISCAL_DEGREE_CODE")
    public PerFiscalDegreeCode getPerFiscalDegreeCode() {
        return this.perFiscalDegreeCode;
    }
    
    public void setPerFiscalDegreeCode(PerFiscalDegreeCode perFiscalDegreeCode) {
        this.perFiscalDegreeCode = perFiscalDegreeCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="GROUP_TYPE_CODE", referencedColumnName="GROUP_TYPE_CODE", insertable=false, updatable=false), 
        @JoinColumn(name="FISCAL_DEGREE_CODE", referencedColumnName="FISCAL_DEGREE_CODE", insertable=false, updatable=false) } )
    public PerGroupDegree getPerGroupDegree() {
        return this.perGroupDegree;
    }
    
    public void setPerGroupDegree(PerGroupDegree perGroupDegree) {
        this.perGroupDegree = perGroupDegree;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="GROUP_TYPE_CODE", insertable=false, updatable=false)
    public PerGroupTypeCode getPerGroupTypeCode() {
        return this.perGroupTypeCode;
    }
    
    public void setPerGroupTypeCode(PerGroupTypeCode perGroupTypeCode) {
        this.perGroupTypeCode = perGroupTypeCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="JOB_TYPE_CODE", nullable=false)
    public PerJobTypeCode getPerJobTypeCode() {
        return this.perJobTypeCode;
    }
    
    public void setPerJobTypeCode(PerJobTypeCode perJobTypeCode) {
        this.perJobTypeCode = perJobTypeCode;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="FISCAL_YEAR", nullable=false, length=7)
    public Date getFiscalYear() {
        return this.fiscalYear;
    }
    
    public void setFiscalYear(Date fiscalYear) {
        this.fiscalYear = fiscalYear;
    }

    
    @Column(name="JOB_NAME", nullable=false, length=100)
    public String getJobName() {
        return this.jobName;
    }
    
    public void setJobName(String jobName) {
        this.jobName = jobName;
    }

    
    @Column(name="JOB_DESC", length=750)
    public String getJobDesc() {
        return this.jobDesc;
    }
    
    public void setJobDesc(String jobDesc) {
        this.jobDesc = jobDesc;
    }

    
    @Column(name="JOB_EXPERIANCE", length=750)
    public String getJobExperiance() {
        return this.jobExperiance;
    }
    
    public void setJobExperiance(String jobExperiance) {
        this.jobExperiance = jobExperiance;
    }

    
    @Column(name="JOB_TASK", length=2000)
    public String getJobTask() {
        return this.jobTask;
    }
    
    public void setJobTask(String jobTask) {
        this.jobTask = jobTask;
    }

    
    @Column(name="RECORD_CREATE_USER", length=15)
    public String getRecordCreateUser() {
        return this.recordCreateUser;
    }
    
    public void setRecordCreateUser(String recordCreateUser) {
        this.recordCreateUser = recordCreateUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_CREATE_DATE", length=7)
    public Date getRecordCreateDate() {
        return this.recordCreateDate;
    }
    
    public void setRecordCreateDate(Date recordCreateDate) {
        this.recordCreateDate = recordCreateDate;
    }

    
    @Column(name="RECORD_UPDATE_USER", length=15)
    public String getRecordUpdateUser() {
        return this.recordUpdateUser;
    }
    
    public void setRecordUpdateUser(String recordUpdateUser) {
        this.recordUpdateUser = recordUpdateUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_UPDATE_DATE", length=7)
    public Date getRecordUpdateDate() {
        return this.recordUpdateDate;
    }
    
    public void setRecordUpdateDate(Date recordUpdateDate) {
        this.recordUpdateDate = recordUpdateDate;
    }

    
    @Column(name="JOB_CODE_REAL", length=10)
    public String getJobCodeReal() {
        return this.jobCodeReal;
    }
    
    public void setJobCodeReal(String jobCodeReal) {
        this.jobCodeReal = jobCodeReal;
    }

    
    @Column(name="CHK_JOIN", precision=1, scale=0)
    public Boolean getChkJoin() {
        return this.chkJoin;
    }
    
    public void setChkJoin(Boolean chkJoin) {
        this.chkJoin = chkJoin;
    }

    
    @Column(name="AGZ", precision=5, scale=0)
    public Integer getAgz() {
        return this.agz;
    }
    
    public void setAgz(Integer agz) {
        this.agz = agz;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerEmpPromotionRejectNew> getPerEmpPromotionRejectNews() {
        return this.perEmpPromotionRejectNews;
    }
    
    public void setPerEmpPromotionRejectNews(Set<PerEmpPromotionRejectNew> perEmpPromotionRejectNews) {
        this.perEmpPromotionRejectNews = perEmpPromotionRejectNews;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerJobDetail> getPerJobDetails() {
        return this.perJobDetails;
    }
    
    public void setPerJobDetails(Set<PerJobDetail> perJobDetails) {
        this.perJobDetails = perJobDetails;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerHumanBalJobDistribute> getPerHumanBalJobDistributes() {
        return this.perHumanBalJobDistributes;
    }
    
    public void setPerHumanBalJobDistributes(Set<PerHumanBalJobDistribute> perHumanBalJobDistributes) {
        this.perHumanBalJobDistributes = perHumanBalJobDistributes;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerPromotionTrans> getPerPromotionTranses() {
        return this.perPromotionTranses;
    }
    
    public void setPerPromotionTranses(Set<PerPromotionTrans> perPromotionTranses) {
        this.perPromotionTranses = perPromotionTranses;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerAnnualEvalEmp> getPerAnnualEvalEmps() {
        return this.perAnnualEvalEmps;
    }
    
    public void setPerAnnualEvalEmps(Set<PerAnnualEvalEmp> perAnnualEvalEmps) {
        this.perAnnualEvalEmps = perAnnualEvalEmps;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerAnnualEvalModelEmp> getPerAnnualEvalModelEmps() {
        return this.perAnnualEvalModelEmps;
    }
    
    public void setPerAnnualEvalModelEmps(Set<PerAnnualEvalModelEmp> perAnnualEvalModelEmps) {
        this.perAnnualEvalModelEmps = perAnnualEvalModelEmps;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerHumanBalJobNew> getPerHumanBalJobNews() {
        return this.perHumanBalJobNews;
    }
    
    public void setPerHumanBalJobNews(Set<PerHumanBalJobNew> perHumanBalJobNews) {
        this.perHumanBalJobNews = perHumanBalJobNews;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCodeByJobCode")
    public Set<PerEmpHistory> getPerEmpHistoriesForJobCode() {
        return this.perEmpHistoriesForJobCode;
    }
    
    public void setPerEmpHistoriesForJobCode(Set<PerEmpHistory> perEmpHistoriesForJobCode) {
        this.perEmpHistoriesForJobCode = perEmpHistoriesForJobCode;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerPromotionTransNew> getPerPromotionTransNews() {
        return this.perPromotionTransNews;
    }
    
    public void setPerPromotionTransNews(Set<PerPromotionTransNew> perPromotionTransNews) {
        this.perPromotionTransNews = perPromotionTransNews;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerHumanBalJobDistributeN> getPerHumanBalJobDistributeNs() {
        return this.perHumanBalJobDistributeNs;
    }
    
    public void setPerHumanBalJobDistributeNs(Set<PerHumanBalJobDistributeN> perHumanBalJobDistributeNs) {
        this.perHumanBalJobDistributeNs = perHumanBalJobDistributeNs;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCodeByJobCodeTransfer")
    public Set<PerEmploymentMasters> getPerEmploymentMastersesForJobCodeTransfer() {
        return this.perEmploymentMastersesForJobCodeTransfer;
    }
    
    public void setPerEmploymentMastersesForJobCodeTransfer(Set<PerEmploymentMasters> perEmploymentMastersesForJobCodeTransfer) {
        this.perEmploymentMastersesForJobCodeTransfer = perEmploymentMastersesForJobCodeTransfer;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerElawaTransaction> getPerElawaTransactions() {
        return this.perElawaTransactions;
    }
    
    public void setPerElawaTransactions(Set<PerElawaTransaction> perElawaTransactions) {
        this.perElawaTransactions = perElawaTransactions;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCodeByJobCodeNew")
    public Set<PerEmpPromotion> getPerEmpPromotionsForJobCodeNew() {
        return this.perEmpPromotionsForJobCodeNew;
    }
    
    public void setPerEmpPromotionsForJobCodeNew(Set<PerEmpPromotion> perEmpPromotionsForJobCodeNew) {
        this.perEmpPromotionsForJobCodeNew = perEmpPromotionsForJobCodeNew;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerHumanBalJob> getPerHumanBalJobs() {
        return this.perHumanBalJobs;
    }
    
    public void setPerHumanBalJobs(Set<PerHumanBalJob> perHumanBalJobs) {
        this.perHumanBalJobs = perHumanBalJobs;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCodeByJobCodeNew")
    public Set<PerEmpPromotionNew> getPerEmpPromotionNewsForJobCodeNew() {
        return this.perEmpPromotionNewsForJobCodeNew;
    }
    
    public void setPerEmpPromotionNewsForJobCodeNew(Set<PerEmpPromotionNew> perEmpPromotionNewsForJobCodeNew) {
        this.perEmpPromotionNewsForJobCodeNew = perEmpPromotionNewsForJobCodeNew;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCodeByJobCode")
    public Set<PerEmploymentMasters> getPerEmploymentMastersesForJobCode() {
        return this.perEmploymentMastersesForJobCode;
    }
    
    public void setPerEmploymentMastersesForJobCode(Set<PerEmploymentMasters> perEmploymentMastersesForJobCode) {
        this.perEmploymentMastersesForJobCode = perEmploymentMastersesForJobCode;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCodeByJobCode")
    public Set<PerEmpPromotion> getPerEmpPromotionsForJobCode() {
        return this.perEmpPromotionsForJobCode;
    }
    
    public void setPerEmpPromotionsForJobCode(Set<PerEmpPromotion> perEmpPromotionsForJobCode) {
        this.perEmpPromotionsForJobCode = perEmpPromotionsForJobCode;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCodeByJobCode")
    public Set<PerEmpPromotionNew> getPerEmpPromotionNewsForJobCode() {
        return this.perEmpPromotionNewsForJobCode;
    }
    
    public void setPerEmpPromotionNewsForJobCode(Set<PerEmpPromotionNew> perEmpPromotionNewsForJobCode) {
        this.perEmpPromotionNewsForJobCode = perEmpPromotionNewsForJobCode;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerElawaTransactionReject> getPerElawaTransactionRejects() {
        return this.perElawaTransactionRejects;
    }
    
    public void setPerElawaTransactionRejects(Set<PerElawaTransactionReject> perElawaTransactionRejects) {
        this.perElawaTransactionRejects = perElawaTransactionRejects;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCode")
    public Set<PerAnnualEvalModEmpTot> getPerAnnualEvalModEmpTots() {
        return this.perAnnualEvalModEmpTots;
    }
    
    public void setPerAnnualEvalModEmpTots(Set<PerAnnualEvalModEmpTot> perAnnualEvalModEmpTots) {
        this.perAnnualEvalModEmpTots = perAnnualEvalModEmpTots;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perJobCodeByJobCodeTransfer")
    public Set<PerEmpHistory> getPerEmpHistoriesForJobCodeTransfer() {
        return this.perEmpHistoriesForJobCodeTransfer;
    }
    
    public void setPerEmpHistoriesForJobCodeTransfer(Set<PerEmpHistory> perEmpHistoriesForJobCodeTransfer) {
        this.perEmpHistoriesForJobCodeTransfer = perEmpHistoriesForJobCodeTransfer;
    }




}


