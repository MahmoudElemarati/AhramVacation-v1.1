package com.ahramattend.www._0_0_0_2_0_DB_Entities;
// Generated Mar 9, 2021 2:52:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PerHumanBalJobDistribute generated by hbm2java
 */
@Entity
@Table(name="PER_HUMAN_BAL_JOB_DISTRIBUTE"
    ,schema="SHAMS"
)
public class PerHumanBalJobDistribute  implements java.io.Serializable {


     private PerHumanBalJobDistributeId id;
     private PerGroupDegree perGroupDegree;
     private PerHumanBalYear perHumanBalYear;
     private PerJobCode perJobCode;
     private PerOrganizationStructure perOrganizationStructureByOrgIdMinus;
     private PerOrganizationStructure perOrganizationStructureByOrgId;
     private PerOrgunitCode perOrgunitCodeByOrgunitCodeMinus;
     private PerOrgunitCode perOrgunitCodeByOrgunitCode;
     private Date transDate;
     private Integer fundedPlus;
     private Integer existPlus;
     private Integer emptyPlus;
     private Integer fundedMinus;
     private Integer existMinus;
     private Integer emptyMinus;
     private int degreeTransfeerd;
     private String remarks;

    public PerHumanBalJobDistribute() {
    }

	
    public PerHumanBalJobDistribute(PerHumanBalJobDistributeId id, PerGroupDegree perGroupDegree, PerHumanBalYear perHumanBalYear, PerJobCode perJobCode, PerOrganizationStructure perOrganizationStructureByOrgId, PerOrgunitCode perOrgunitCodeByOrgunitCode, Date transDate, int degreeTransfeerd) {
        this.id = id;
        this.perGroupDegree = perGroupDegree;
        this.perHumanBalYear = perHumanBalYear;
        this.perJobCode = perJobCode;
        this.perOrganizationStructureByOrgId = perOrganizationStructureByOrgId;
        this.perOrgunitCodeByOrgunitCode = perOrgunitCodeByOrgunitCode;
        this.transDate = transDate;
        this.degreeTransfeerd = degreeTransfeerd;
    }
    public PerHumanBalJobDistribute(PerHumanBalJobDistributeId id, PerGroupDegree perGroupDegree, PerHumanBalYear perHumanBalYear, PerJobCode perJobCode, PerOrganizationStructure perOrganizationStructureByOrgIdMinus, PerOrganizationStructure perOrganizationStructureByOrgId, PerOrgunitCode perOrgunitCodeByOrgunitCodeMinus, PerOrgunitCode perOrgunitCodeByOrgunitCode, Date transDate, Integer fundedPlus, Integer existPlus, Integer emptyPlus, Integer fundedMinus, Integer existMinus, Integer emptyMinus, int degreeTransfeerd, String remarks) {
       this.id = id;
       this.perGroupDegree = perGroupDegree;
       this.perHumanBalYear = perHumanBalYear;
       this.perJobCode = perJobCode;
       this.perOrganizationStructureByOrgIdMinus = perOrganizationStructureByOrgIdMinus;
       this.perOrganizationStructureByOrgId = perOrganizationStructureByOrgId;
       this.perOrgunitCodeByOrgunitCodeMinus = perOrgunitCodeByOrgunitCodeMinus;
       this.perOrgunitCodeByOrgunitCode = perOrgunitCodeByOrgunitCode;
       this.transDate = transDate;
       this.fundedPlus = fundedPlus;
       this.existPlus = existPlus;
       this.emptyPlus = emptyPlus;
       this.fundedMinus = fundedMinus;
       this.existMinus = existMinus;
       this.emptyMinus = emptyMinus;
       this.degreeTransfeerd = degreeTransfeerd;
       this.remarks = remarks;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="locationCode", column=@Column(name="LOCATION_CODE", nullable=false, length=3) ), 
        @AttributeOverride(name="humanBalId", column=@Column(name="HUMAN_BAL_ID", nullable=false, length=5) ), 
        @AttributeOverride(name="distributeSerial", column=@Column(name="DISTRIBUTE_SERIAL", nullable=false, length=5) ) } )
    public PerHumanBalJobDistributeId getId() {
        return this.id;
    }
    
    public void setId(PerHumanBalJobDistributeId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="GROUP_TYPE_CODE", referencedColumnName="GROUP_TYPE_CODE", nullable=false), 
        @JoinColumn(name="FISCAL_DEGREE_CODE", referencedColumnName="FISCAL_DEGREE_CODE", nullable=false) } )
    public PerGroupDegree getPerGroupDegree() {
        return this.perGroupDegree;
    }
    
    public void setPerGroupDegree(PerGroupDegree perGroupDegree) {
        this.perGroupDegree = perGroupDegree;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="HUMAN_BAL_ID", referencedColumnName="HUMAN_BAL_ID", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="LOCATION_CODE", referencedColumnName="LOCATION_CODE", nullable=false, insertable=false, updatable=false) } )
    public PerHumanBalYear getPerHumanBalYear() {
        return this.perHumanBalYear;
    }
    
    public void setPerHumanBalYear(PerHumanBalYear perHumanBalYear) {
        this.perHumanBalYear = perHumanBalYear;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="JOB_CODE", nullable=false)
    public PerJobCode getPerJobCode() {
        return this.perJobCode;
    }
    
    public void setPerJobCode(PerJobCode perJobCode) {
        this.perJobCode = perJobCode;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORG_ID_MINUS")
    public PerOrganizationStructure getPerOrganizationStructureByOrgIdMinus() {
        return this.perOrganizationStructureByOrgIdMinus;
    }
    
    public void setPerOrganizationStructureByOrgIdMinus(PerOrganizationStructure perOrganizationStructureByOrgIdMinus) {
        this.perOrganizationStructureByOrgIdMinus = perOrganizationStructureByOrgIdMinus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORG_ID", nullable=false)
    public PerOrganizationStructure getPerOrganizationStructureByOrgId() {
        return this.perOrganizationStructureByOrgId;
    }
    
    public void setPerOrganizationStructureByOrgId(PerOrganizationStructure perOrganizationStructureByOrgId) {
        this.perOrganizationStructureByOrgId = perOrganizationStructureByOrgId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORGUNIT_CODE_MINUS")
    public PerOrgunitCode getPerOrgunitCodeByOrgunitCodeMinus() {
        return this.perOrgunitCodeByOrgunitCodeMinus;
    }
    
    public void setPerOrgunitCodeByOrgunitCodeMinus(PerOrgunitCode perOrgunitCodeByOrgunitCodeMinus) {
        this.perOrgunitCodeByOrgunitCodeMinus = perOrgunitCodeByOrgunitCodeMinus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ORGUNIT_CODE", nullable=false)
    public PerOrgunitCode getPerOrgunitCodeByOrgunitCode() {
        return this.perOrgunitCodeByOrgunitCode;
    }
    
    public void setPerOrgunitCodeByOrgunitCode(PerOrgunitCode perOrgunitCodeByOrgunitCode) {
        this.perOrgunitCodeByOrgunitCode = perOrgunitCodeByOrgunitCode;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="TRANS_DATE", nullable=false, length=7)
    public Date getTransDate() {
        return this.transDate;
    }
    
    public void setTransDate(Date transDate) {
        this.transDate = transDate;
    }

    
    @Column(name="FUNDED_PLUS", precision=5, scale=0)
    public Integer getFundedPlus() {
        return this.fundedPlus;
    }
    
    public void setFundedPlus(Integer fundedPlus) {
        this.fundedPlus = fundedPlus;
    }

    
    @Column(name="EXIST_PLUS", precision=5, scale=0)
    public Integer getExistPlus() {
        return this.existPlus;
    }
    
    public void setExistPlus(Integer existPlus) {
        this.existPlus = existPlus;
    }

    
    @Column(name="EMPTY_PLUS", precision=5, scale=0)
    public Integer getEmptyPlus() {
        return this.emptyPlus;
    }
    
    public void setEmptyPlus(Integer emptyPlus) {
        this.emptyPlus = emptyPlus;
    }

    
    @Column(name="FUNDED_MINUS", precision=5, scale=0)
    public Integer getFundedMinus() {
        return this.fundedMinus;
    }
    
    public void setFundedMinus(Integer fundedMinus) {
        this.fundedMinus = fundedMinus;
    }

    
    @Column(name="EXIST_MINUS", precision=5, scale=0)
    public Integer getExistMinus() {
        return this.existMinus;
    }
    
    public void setExistMinus(Integer existMinus) {
        this.existMinus = existMinus;
    }

    
    @Column(name="EMPTY_MINUS", precision=5, scale=0)
    public Integer getEmptyMinus() {
        return this.emptyMinus;
    }
    
    public void setEmptyMinus(Integer emptyMinus) {
        this.emptyMinus = emptyMinus;
    }

    
    @Column(name="DEGREE_TRANSFEERD", nullable=false, precision=5, scale=0)
    public int getDegreeTransfeerd() {
        return this.degreeTransfeerd;
    }
    
    public void setDegreeTransfeerd(int degreeTransfeerd) {
        this.degreeTransfeerd = degreeTransfeerd;
    }

    
    @Column(name="REMARKS", length=100)
    public String getRemarks() {
        return this.remarks;
    }
    
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }




}


