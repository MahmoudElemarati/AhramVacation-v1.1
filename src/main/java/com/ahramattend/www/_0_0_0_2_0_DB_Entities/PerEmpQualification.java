package com.ahramattend.www._0_0_0_2_0_DB_Entities;
// Generated Feb 23, 2021 6:24:44 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PerEmpQualification generated by hbm2java
 */
@Entity
@Table(name="PER_EMP_QUALIFICATION"
    ,schema="SHAMS"
)
public class PerEmpQualification  implements java.io.Serializable {


     private PerEmpQualificationId id;
     private PerUniversityCode perUniversityCode;
     private PerFacultyCode perFacultyCode;
     private PerFacultyUniversity perFacultyUniversity;
     private PerQualCode perQualCode;
     private PerQualFaculty perQualFaculty;
     private PerQualSpecialist perQualSpecialist;
     private PerSpecialistCode perSpecialistCode;
     private PerEmploymentMasters perEmploymentMasters;
     private Date qualYear;
     private BigDecimal empPercent;
     private Byte docPages;
     private String remarks;

    public PerEmpQualification() {
    }

	
    public PerEmpQualification(PerEmpQualificationId id, PerQualCode perQualCode, PerQualFaculty perQualFaculty, PerQualSpecialist perQualSpecialist, PerEmploymentMasters perEmploymentMasters, Date qualYear) {
        this.id = id;
        this.perQualCode = perQualCode;
        this.perQualFaculty = perQualFaculty;
        this.perQualSpecialist = perQualSpecialist;
        this.perEmploymentMasters = perEmploymentMasters;
        this.qualYear = qualYear;
    }
    public PerEmpQualification(PerEmpQualificationId id, PerUniversityCode perUniversityCode, PerFacultyCode perFacultyCode, PerFacultyUniversity perFacultyUniversity, PerQualCode perQualCode, PerQualFaculty perQualFaculty, PerQualSpecialist perQualSpecialist, PerSpecialistCode perSpecialistCode, PerEmploymentMasters perEmploymentMasters, Date qualYear, BigDecimal empPercent, Byte docPages, String remarks) {
       this.id = id;
       this.perUniversityCode = perUniversityCode;
       this.perFacultyCode = perFacultyCode;
       this.perFacultyUniversity = perFacultyUniversity;
       this.perQualCode = perQualCode;
       this.perQualFaculty = perQualFaculty;
       this.perQualSpecialist = perQualSpecialist;
       this.perSpecialistCode = perSpecialistCode;
       this.perEmploymentMasters = perEmploymentMasters;
       this.qualYear = qualYear;
       this.empPercent = empPercent;
       this.docPages = docPages;
       this.remarks = remarks;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="employeeId", column=@Column(name="EMPLOYEE_ID", nullable=false, length=10) ), 
        @AttributeOverride(name="serialNo", column=@Column(name="SERIAL_NO", nullable=false, precision=5, scale=0) ) } )
    public PerEmpQualificationId getId() {
        return this.id;
    }
    
    public void setId(PerEmpQualificationId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="UNIVERSITY_CODE")
    public PerUniversityCode getPerUniversityCode() {
        return this.perUniversityCode;
    }
    
    public void setPerUniversityCode(PerUniversityCode perUniversityCode) {
        this.perUniversityCode = perUniversityCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FACULTY_CODE")
    public PerFacultyCode getPerFacultyCode() {
        return this.perFacultyCode;
    }
    
    public void setPerFacultyCode(PerFacultyCode perFacultyCode) {
        this.perFacultyCode = perFacultyCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="FACULTY_CODE", referencedColumnName="FACULTY_CODE", insertable=false, updatable=false), 
        @JoinColumn(name="UNIVERSITY_CODE", referencedColumnName="UNIVERSITY_CODE", insertable=false, updatable=false) } )
    public PerFacultyUniversity getPerFacultyUniversity() {
        return this.perFacultyUniversity;
    }
    
    public void setPerFacultyUniversity(PerFacultyUniversity perFacultyUniversity) {
        this.perFacultyUniversity = perFacultyUniversity;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="QUAL_CODE", nullable=false)
    public PerQualCode getPerQualCode() {
        return this.perQualCode;
    }
    
    public void setPerQualCode(PerQualCode perQualCode) {
        this.perQualCode = perQualCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="QUAL_CODE", referencedColumnName="QUAL_CODE", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="FACULTY_CODE", referencedColumnName="FACULTY_CODE", insertable=false, updatable=false) } )
    public PerQualFaculty getPerQualFaculty() {
        return this.perQualFaculty;
    }
    
    public void setPerQualFaculty(PerQualFaculty perQualFaculty) {
        this.perQualFaculty = perQualFaculty;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="QUAL_CODE", referencedColumnName="QUAL_CODE", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="SPECIALIST_CODE", referencedColumnName="SPECIALIST_CODE", insertable=false, updatable=false) } )
    public PerQualSpecialist getPerQualSpecialist() {
        return this.perQualSpecialist;
    }
    
    public void setPerQualSpecialist(PerQualSpecialist perQualSpecialist) {
        this.perQualSpecialist = perQualSpecialist;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="SPECIALIST_CODE", insertable=false, updatable=false)
    public PerSpecialistCode getPerSpecialistCode() {
        return this.perSpecialistCode;
    }
    
    public void setPerSpecialistCode(PerSpecialistCode perSpecialistCode) {
        this.perSpecialistCode = perSpecialistCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="EMPLOYEE_ID", nullable=false, insertable=false, updatable=false)
    public PerEmploymentMasters getPerEmploymentMasters() {
        return this.perEmploymentMasters;
    }
    
    public void setPerEmploymentMasters(PerEmploymentMasters perEmploymentMasters) {
        this.perEmploymentMasters = perEmploymentMasters;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="QUAL_YEAR", nullable=false, length=7)
    public Date getQualYear() {
        return this.qualYear;
    }
    
    public void setQualYear(Date qualYear) {
        this.qualYear = qualYear;
    }

    
    @Column(name="EMP_PERCENT", precision=5)
    public BigDecimal getEmpPercent() {
        return this.empPercent;
    }
    
    public void setEmpPercent(BigDecimal empPercent) {
        this.empPercent = empPercent;
    }

    
    @Column(name="DOC_PAGES", precision=2, scale=0)
    public Byte getDocPages() {
        return this.docPages;
    }
    
    public void setDocPages(Byte docPages) {
        this.docPages = docPages;
    }

    
    @Column(name="REMARKS", length=150)
    public String getRemarks() {
        return this.remarks;
    }
    
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }




}


