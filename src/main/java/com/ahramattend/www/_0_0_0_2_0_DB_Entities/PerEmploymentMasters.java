package com.ahramattend.www._0_0_0_2_0_DB_Entities;
// Generated Mar 9, 2021 2:52:01 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PerEmploymentMasters generated by hbm2java
 */
@Entity
@Table(name="PER_EMPLOYMENT_MASTERS"
    ,schema="SHAMS"
)
public class PerEmploymentMasters  implements java.io.Serializable {


     private String employeeId;
     private PerSpecialistCode perSpecialistCodeBySpecialistCodeBegin;
     private PerSpecialistCode perSpecialistCodeBySpecialistCodeFirst;
     private PerSpecialistCode perSpecialistCodeBySpecialistCode;
     private PerJobLaw perJobLaw;
     private PerFiscalDegreeCodeNew perFiscalDegreeCodeNew;
     private PayFinancialStatusCode payFinancialStatusCode;
     private PerAttendanceWrkTypeDetail perAttendanceWrkTypeDetail;
     private PerCityCode perCityCode;
     private PerEmploymentParameter perEmploymentParameter;
     private PerExternalSideCode perExternalSideCodeByPeremPerescFromFk;
     private PerExternalSideCode perExternalSideCodeByPeremPerescFk;
     private PerFiscalDegreeCode perFiscalDegreeCode;
     private PerGeneralCode perGeneralCodeByGeneralCodeFirst;
     private PerGeneralCode perGeneralCodeByGeneralCode;
     private PerGroupTypeCode perGroupTypeCode;
     private PerInsuranceSideCode perInsuranceSideCode;
     private PerJobCode perJobCodeByJobCodeTransfer;
     private PerJobCode perJobCodeByJobCode;
     private PerLocationCodes perLocationCodes;
     private PerMaritalCode perMaritalCode;
     private PerMilitaryCode perMilitaryCode;
     private PerMosqueCode perMosqueCode;
     private PerNationalCode perNationalCode;
     private PerOrganizationStructure perOrganizationStructureByOrgIdFrom;
     private PerOrganizationStructure perOrganizationStructureByOrgId;
     private PerOrgunitCode perOrgunitCodeByOrgunitCode;
     private PerOrgunitCode perOrgunitCodeByOrgunitCodeFrom;
     private PerQualCode perQualCodeByQualCodeFirst;
     private PerQualCode perQualCodeByQualCodeBegin;
     private PerQualCode perQualCodeByQualCode;
     private PerReligonCode perReligonCode;
     private BudProjectSub budProjectSubByPeremBudProjSFromFk;
     private BudProjectSub budProjectSubByPeremBudProjSFk;
     private String employeeNo;
     private String nationalNo;
     private String insuranceNo;
     private String empAname;
     private String empEname;
     private Date birthDate;
     private Date startContractDate;
     private Date contractDate;
     private Date workStartDate;
     private Date contractEnddate;
     private String requestNo;
     private String decisionNo;
     private Date decisionDate;
     private Short testPeriod;
     private Integer worningPeriod;
     private Date degreeDate;
     private Date degreePriorityDate;
     private Integer degreePriority;
     private Date jobDate;
     private BigDecimal basicSalaryValue;
     private BigDecimal salaryValue;
     private BigDecimal contractValue;
     private Byte deserveNo;
     private String empFileno;
     private String empFilePosition;
     private Boolean empJobFlag;
     private Boolean empFlag;
     private Byte sexFlag;
     private Date qualYear;
     private Date militaryDate;
     private String militaryCardNo;
     private Byte noForConstantElawa;
     private Byte orgFlag;
     private Boolean orgFlagFrom;
     private String classCode;
     private String categoryCode;
     private Boolean foodCard;
     private Boolean foodCardType;
     private String emailWork;
     private Date qualYearFirst;
     private String wrkTypeDecisionNo;
     private Date wrkTypeDecisionDate;
     private Date wrkTypeFromDate;
     private Date wrkTypeToDate;
     private BigDecimal wrkTypeSalaryRatio;
     private String wrkTypeNotes;
     private Date externalStartdate;
     private Date externalEnddate;
     private String recordCreateUser;
     private Date recordCreateDate;
     private String recordUpdateUser;
     private Date recordUpdateDate;
     private Date jobDateTransfer;
     private Date qualYearBegin;
     private Boolean chkSpecialNeeds;
     private Boolean cadreKind;
     private BigDecimal jobSalaryValue;
     private String logUserId;
     private String logFunctionName;
     private Set<PerEmpVacationReqJava> perEmpVacationReqJavasForEmployeeIdBoss = new HashSet<PerEmpVacationReqJava>(0);
     private Set<PerComplaintData> perComplaintDatas = new HashSet<PerComplaintData>(0);
     private Set<PerAnnualEvalModelEmp> perAnnualEvalModelEmps = new HashSet<PerAnnualEvalModelEmp>(0);
     private Set<PerAnnualEvalModEmpTot> perAnnualEvalModEmpTots = new HashSet<PerAnnualEvalModEmpTot>(0);
     private Set<PerEmpFile> perEmpFiles = new HashSet<PerEmpFile>(0);
     private Set<PerEmpPromotion> perEmpPromotions = new HashSet<PerEmpPromotion>(0);
     private Set<PerElawaTransactionReject> perElawaTransactionRejects = new HashSet<PerElawaTransactionReject>(0);
     private Set<PerEmpVacationBalance> perEmpVacationBalances = new HashSet<PerEmpVacationBalance>(0);
     private Set<PayEmployeeReq> payEmployeeReqs = new HashSet<PayEmployeeReq>(0);
     private PayEmployeeMaster payEmployeeMaster;
     private Set<PerEmpVacationTrans> perEmpVacationTranses = new HashSet<PerEmpVacationTrans>(0);
     private Set<PerEmpDecisionSheet> perEmpDecisionSheets = new HashSet<PerEmpDecisionSheet>(0);
     private Set<AppEmployeeReqJ222> appEmployeeReqJ222s = new HashSet<AppEmployeeReqJ222>(0);
     private Set<PerEmpHistory> perEmpHistories = new HashSet<PerEmpHistory>(0);
     private Set<AppEmployeeReqJ444> appEmployeeReqJ444s = new HashSet<AppEmployeeReqJ444>(0);
     private PerUsers perUsers;
     private Set<PerEmpPromotionNew> perEmpPromotionNews = new HashSet<PerEmpPromotionNew>(0);
     private Set<PerEmpQualification> perEmpQualifications = new HashSet<PerEmpQualification>(0);
     private Set<PerElawaTransaction> perElawaTransactions = new HashSet<PerElawaTransaction>(0);
     private Set<PerAnnualEvalEmp> perAnnualEvalEmps = new HashSet<PerAnnualEvalEmp>(0);
     private Set<PerEmpPromotionRejectNew> perEmpPromotionRejectNews = new HashSet<PerEmpPromotionRejectNew>(0);
     private Set<AppSubElemSpecAuth> appSubElemSpecAuthsForEmployeeId = new HashSet<AppSubElemSpecAuth>(0);
     private Set<AppSubElemSpecAuth> appSubElemSpecAuthsForEmployeeIdAction = new HashSet<AppSubElemSpecAuth>(0);
     private Set<PerEmpVacationReqJava> perEmpVacationReqJavasForEmployeeId = new HashSet<PerEmpVacationReqJava>(0);
     private Set<AppSubTabSpecAuth> appSubTabSpecAuthsForEmployeeId = new HashSet<AppSubTabSpecAuth>(0);
     private PerEmpPhoto perEmpPhoto;
     private Set<AppSubTabSpecAuth> appSubTabSpecAuthsForEmployeeIdAction = new HashSet<AppSubTabSpecAuth>(0);

    public PerEmploymentMasters() {
    }

	
    public PerEmploymentMasters(String employeeId, PerEmploymentParameter perEmploymentParameter, PerGeneralCode perGeneralCodeByGeneralCode, PerJobCode perJobCodeByJobCode, PerLocationCodes perLocationCodes, String employeeNo, String empAname, Date contractDate, Byte sexFlag, Byte orgFlag) {
        this.employeeId = employeeId;
        this.perEmploymentParameter = perEmploymentParameter;
        this.perGeneralCodeByGeneralCode = perGeneralCodeByGeneralCode;
        this.perJobCodeByJobCode = perJobCodeByJobCode;
        this.perLocationCodes = perLocationCodes;
        this.employeeNo = employeeNo;
        this.empAname = empAname;
        this.contractDate = contractDate;
        this.sexFlag = sexFlag;
        this.orgFlag = orgFlag;
    }
    public PerEmploymentMasters(String employeeId, PerSpecialistCode perSpecialistCodeBySpecialistCodeBegin, PerSpecialistCode perSpecialistCodeBySpecialistCodeFirst, PerSpecialistCode perSpecialistCodeBySpecialistCode, PerJobLaw perJobLaw, PerFiscalDegreeCodeNew perFiscalDegreeCodeNew, PayFinancialStatusCode payFinancialStatusCode, PerAttendanceWrkTypeDetail perAttendanceWrkTypeDetail, PerCityCode perCityCode, PerEmploymentParameter perEmploymentParameter, PerExternalSideCode perExternalSideCodeByPeremPerescFromFk, PerExternalSideCode perExternalSideCodeByPeremPerescFk, PerFiscalDegreeCode perFiscalDegreeCode, PerGeneralCode perGeneralCodeByGeneralCodeFirst, PerGeneralCode perGeneralCodeByGeneralCode, PerGroupTypeCode perGroupTypeCode, PerInsuranceSideCode perInsuranceSideCode, PerJobCode perJobCodeByJobCodeTransfer, PerJobCode perJobCodeByJobCode, PerLocationCodes perLocationCodes, PerMaritalCode perMaritalCode, PerMilitaryCode perMilitaryCode, PerMosqueCode perMosqueCode, PerNationalCode perNationalCode, PerOrganizationStructure perOrganizationStructureByOrgIdFrom, PerOrganizationStructure perOrganizationStructureByOrgId, PerOrgunitCode perOrgunitCodeByOrgunitCode, PerOrgunitCode perOrgunitCodeByOrgunitCodeFrom, PerQualCode perQualCodeByQualCodeFirst, PerQualCode perQualCodeByQualCodeBegin, PerQualCode perQualCodeByQualCode, PerReligonCode perReligonCode, BudProjectSub budProjectSubByPeremBudProjSFromFk, BudProjectSub budProjectSubByPeremBudProjSFk, String employeeNo, String nationalNo, String insuranceNo, String empAname, String empEname, Date birthDate, Date startContractDate, Date contractDate, Date workStartDate, Date contractEnddate, String requestNo, String decisionNo, Date decisionDate, Short testPeriod, Integer worningPeriod, Date degreeDate, Date degreePriorityDate, Integer degreePriority, Date jobDate, BigDecimal basicSalaryValue, BigDecimal salaryValue, BigDecimal contractValue, Byte deserveNo, String empFileno, String empFilePosition, Boolean empJobFlag, Boolean empFlag, Byte sexFlag, Date qualYear, Date militaryDate, String militaryCardNo, Byte noForConstantElawa, Byte orgFlag, Boolean orgFlagFrom, String classCode, String categoryCode, Boolean foodCard, Boolean foodCardType, String emailWork, Date qualYearFirst, String wrkTypeDecisionNo, Date wrkTypeDecisionDate, Date wrkTypeFromDate, Date wrkTypeToDate, BigDecimal wrkTypeSalaryRatio, String wrkTypeNotes, Date externalStartdate, Date externalEnddate, String recordCreateUser, Date recordCreateDate, String recordUpdateUser, Date recordUpdateDate, Date jobDateTransfer, Date qualYearBegin, Boolean chkSpecialNeeds, Boolean cadreKind, BigDecimal jobSalaryValue, String logUserId, String logFunctionName, Set<PerEmpVacationReqJava> perEmpVacationReqJavasForEmployeeIdBoss, Set<PerComplaintData> perComplaintDatas, Set<PerAnnualEvalModelEmp> perAnnualEvalModelEmps, Set<PerAnnualEvalModEmpTot> perAnnualEvalModEmpTots, Set<PerEmpFile> perEmpFiles, Set<PerEmpPromotion> perEmpPromotions, Set<PerElawaTransactionReject> perElawaTransactionRejects, Set<PerEmpVacationBalance> perEmpVacationBalances, Set<PayEmployeeReq> payEmployeeReqs, PayEmployeeMaster payEmployeeMaster, Set<PerEmpVacationTrans> perEmpVacationTranses, Set<PerEmpDecisionSheet> perEmpDecisionSheets, Set<AppEmployeeReqJ222> appEmployeeReqJ222s, Set<PerEmpHistory> perEmpHistories, Set<AppEmployeeReqJ444> appEmployeeReqJ444s, PerUsers perUsers, Set<PerEmpPromotionNew> perEmpPromotionNews, Set<PerEmpQualification> perEmpQualifications, Set<PerElawaTransaction> perElawaTransactions, Set<PerAnnualEvalEmp> perAnnualEvalEmps, Set<PerEmpPromotionRejectNew> perEmpPromotionRejectNews, Set<AppSubElemSpecAuth> appSubElemSpecAuthsForEmployeeId, Set<AppSubElemSpecAuth> appSubElemSpecAuthsForEmployeeIdAction, Set<PerEmpVacationReqJava> perEmpVacationReqJavasForEmployeeId, Set<AppSubTabSpecAuth> appSubTabSpecAuthsForEmployeeId, PerEmpPhoto perEmpPhoto, Set<AppSubTabSpecAuth> appSubTabSpecAuthsForEmployeeIdAction) {
       this.employeeId = employeeId;
       this.perSpecialistCodeBySpecialistCodeBegin = perSpecialistCodeBySpecialistCodeBegin;
       this.perSpecialistCodeBySpecialistCodeFirst = perSpecialistCodeBySpecialistCodeFirst;
       this.perSpecialistCodeBySpecialistCode = perSpecialistCodeBySpecialistCode;
       this.perJobLaw = perJobLaw;
       this.perFiscalDegreeCodeNew = perFiscalDegreeCodeNew;
       this.payFinancialStatusCode = payFinancialStatusCode;
       this.perAttendanceWrkTypeDetail = perAttendanceWrkTypeDetail;
       this.perCityCode = perCityCode;
       this.perEmploymentParameter = perEmploymentParameter;
       this.perExternalSideCodeByPeremPerescFromFk = perExternalSideCodeByPeremPerescFromFk;
       this.perExternalSideCodeByPeremPerescFk = perExternalSideCodeByPeremPerescFk;
       this.perFiscalDegreeCode = perFiscalDegreeCode;
       this.perGeneralCodeByGeneralCodeFirst = perGeneralCodeByGeneralCodeFirst;
       this.perGeneralCodeByGeneralCode = perGeneralCodeByGeneralCode;
       this.perGroupTypeCode = perGroupTypeCode;
       this.perInsuranceSideCode = perInsuranceSideCode;
       this.perJobCodeByJobCodeTransfer = perJobCodeByJobCodeTransfer;
       this.perJobCodeByJobCode = perJobCodeByJobCode;
       this.perLocationCodes = perLocationCodes;
       this.perMaritalCode = perMaritalCode;
       this.perMilitaryCode = perMilitaryCode;
       this.perMosqueCode = perMosqueCode;
       this.perNationalCode = perNationalCode;
       this.perOrganizationStructureByOrgIdFrom = perOrganizationStructureByOrgIdFrom;
       this.perOrganizationStructureByOrgId = perOrganizationStructureByOrgId;
       this.perOrgunitCodeByOrgunitCode = perOrgunitCodeByOrgunitCode;
       this.perOrgunitCodeByOrgunitCodeFrom = perOrgunitCodeByOrgunitCodeFrom;
       this.perQualCodeByQualCodeFirst = perQualCodeByQualCodeFirst;
       this.perQualCodeByQualCodeBegin = perQualCodeByQualCodeBegin;
       this.perQualCodeByQualCode = perQualCodeByQualCode;
       this.perReligonCode = perReligonCode;
       this.budProjectSubByPeremBudProjSFromFk = budProjectSubByPeremBudProjSFromFk;
       this.budProjectSubByPeremBudProjSFk = budProjectSubByPeremBudProjSFk;
       this.employeeNo = employeeNo;
       this.nationalNo = nationalNo;
       this.insuranceNo = insuranceNo;
       this.empAname = empAname;
       this.empEname = empEname;
       this.birthDate = birthDate;
       this.startContractDate = startContractDate;
       this.contractDate = contractDate;
       this.workStartDate = workStartDate;
       this.contractEnddate = contractEnddate;
       this.requestNo = requestNo;
       this.decisionNo = decisionNo;
       this.decisionDate = decisionDate;
       this.testPeriod = testPeriod;
       this.worningPeriod = worningPeriod;
       this.degreeDate = degreeDate;
       this.degreePriorityDate = degreePriorityDate;
       this.degreePriority = degreePriority;
       this.jobDate = jobDate;
       this.basicSalaryValue = basicSalaryValue;
       this.salaryValue = salaryValue;
       this.contractValue = contractValue;
       this.deserveNo = deserveNo;
       this.empFileno = empFileno;
       this.empFilePosition = empFilePosition;
       this.empJobFlag = empJobFlag;
       this.empFlag = empFlag;
       this.sexFlag = sexFlag;
       this.qualYear = qualYear;
       this.militaryDate = militaryDate;
       this.militaryCardNo = militaryCardNo;
       this.noForConstantElawa = noForConstantElawa;
       this.orgFlag = orgFlag;
       this.orgFlagFrom = orgFlagFrom;
       this.classCode = classCode;
       this.categoryCode = categoryCode;
       this.foodCard = foodCard;
       this.foodCardType = foodCardType;
       this.emailWork = emailWork;
       this.qualYearFirst = qualYearFirst;
       this.wrkTypeDecisionNo = wrkTypeDecisionNo;
       this.wrkTypeDecisionDate = wrkTypeDecisionDate;
       this.wrkTypeFromDate = wrkTypeFromDate;
       this.wrkTypeToDate = wrkTypeToDate;
       this.wrkTypeSalaryRatio = wrkTypeSalaryRatio;
       this.wrkTypeNotes = wrkTypeNotes;
       this.externalStartdate = externalStartdate;
       this.externalEnddate = externalEnddate;
       this.recordCreateUser = recordCreateUser;
       this.recordCreateDate = recordCreateDate;
       this.recordUpdateUser = recordUpdateUser;
       this.recordUpdateDate = recordUpdateDate;
       this.jobDateTransfer = jobDateTransfer;
       this.qualYearBegin = qualYearBegin;
       this.chkSpecialNeeds = chkSpecialNeeds;
       this.cadreKind = cadreKind;
       this.jobSalaryValue = jobSalaryValue;
       this.logUserId = logUserId;
       this.logFunctionName = logFunctionName;
       this.perEmpVacationReqJavasForEmployeeIdBoss = perEmpVacationReqJavasForEmployeeIdBoss;
       this.perComplaintDatas = perComplaintDatas;
       this.perAnnualEvalModelEmps = perAnnualEvalModelEmps;
       this.perAnnualEvalModEmpTots = perAnnualEvalModEmpTots;
       this.perEmpFiles = perEmpFiles;
       this.perEmpPromotions = perEmpPromotions;
       this.perElawaTransactionRejects = perElawaTransactionRejects;
       this.perEmpVacationBalances = perEmpVacationBalances;
       this.payEmployeeReqs = payEmployeeReqs;
       this.payEmployeeMaster = payEmployeeMaster;
       this.perEmpVacationTranses = perEmpVacationTranses;
       this.perEmpDecisionSheets = perEmpDecisionSheets;
       this.appEmployeeReqJ222s = appEmployeeReqJ222s;
       this.perEmpHistories = perEmpHistories;
       this.appEmployeeReqJ444s = appEmployeeReqJ444s;
       this.perUsers = perUsers;
       this.perEmpPromotionNews = perEmpPromotionNews;
       this.perEmpQualifications = perEmpQualifications;
       this.perElawaTransactions = perElawaTransactions;
       this.perAnnualEvalEmps = perAnnualEvalEmps;
       this.perEmpPromotionRejectNews = perEmpPromotionRejectNews;
       this.appSubElemSpecAuthsForEmployeeId = appSubElemSpecAuthsForEmployeeId;
       this.appSubElemSpecAuthsForEmployeeIdAction = appSubElemSpecAuthsForEmployeeIdAction;
       this.perEmpVacationReqJavasForEmployeeId = perEmpVacationReqJavasForEmployeeId;
       this.appSubTabSpecAuthsForEmployeeId = appSubTabSpecAuthsForEmployeeId;
       this.perEmpPhoto = perEmpPhoto;
       this.appSubTabSpecAuthsForEmployeeIdAction = appSubTabSpecAuthsForEmployeeIdAction;
    }
   
     @Id 

    
    @Column(name="EMPLOYEE_ID", unique=true, nullable=false, length=10)
    public String getEmployeeId() {
        return this.employeeId;
    }
    
    public void setEmployeeId(String employeeId) {
        this.employeeId = employeeId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="SPECIALIST_CODE_BEGIN")
    public PerSpecialistCode getPerSpecialistCodeBySpecialistCodeBegin() {
        return this.perSpecialistCodeBySpecialistCodeBegin;
    }
    
    public void setPerSpecialistCodeBySpecialistCodeBegin(PerSpecialistCode perSpecialistCodeBySpecialistCodeBegin) {
        this.perSpecialistCodeBySpecialistCodeBegin = perSpecialistCodeBySpecialistCodeBegin;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="SPECIALIST_CODE_FIRST")
    public PerSpecialistCode getPerSpecialistCodeBySpecialistCodeFirst() {
        return this.perSpecialistCodeBySpecialistCodeFirst;
    }
    
    public void setPerSpecialistCodeBySpecialistCodeFirst(PerSpecialistCode perSpecialistCodeBySpecialistCodeFirst) {
        this.perSpecialistCodeBySpecialistCodeFirst = perSpecialistCodeBySpecialistCodeFirst;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="SPECIALIST_CODE")
    public PerSpecialistCode getPerSpecialistCodeBySpecialistCode() {
        return this.perSpecialistCodeBySpecialistCode;
    }
    
    public void setPerSpecialistCodeBySpecialistCode(PerSpecialistCode perSpecialistCodeBySpecialistCode) {
        this.perSpecialistCodeBySpecialistCode = perSpecialistCodeBySpecialistCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="LAW_SEQ")
    public PerJobLaw getPerJobLaw() {
        return this.perJobLaw;
    }
    
    public void setPerJobLaw(PerJobLaw perJobLaw) {
        this.perJobLaw = perJobLaw;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FISCAL_DEGREE_CODE_NEW")
    public PerFiscalDegreeCodeNew getPerFiscalDegreeCodeNew() {
        return this.perFiscalDegreeCodeNew;
    }
    
    public void setPerFiscalDegreeCodeNew(PerFiscalDegreeCodeNew perFiscalDegreeCodeNew) {
        this.perFiscalDegreeCodeNew = perFiscalDegreeCodeNew;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="STATUS_CODE")
    public PayFinancialStatusCode getPayFinancialStatusCode() {
        return this.payFinancialStatusCode;
    }
    
    public void setPayFinancialStatusCode(PayFinancialStatusCode payFinancialStatusCode) {
        this.payFinancialStatusCode = payFinancialStatusCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="WORK_TYPE_CODE", referencedColumnName="WORK_TYPE_CODE"), 
        @JoinColumn(name="WORK_TYPE_SEQ", referencedColumnName="WORK_TYPE_SEQ") } )
    public PerAttendanceWrkTypeDetail getPerAttendanceWrkTypeDetail() {
        return this.perAttendanceWrkTypeDetail;
    }
    
    public void setPerAttendanceWrkTypeDetail(PerAttendanceWrkTypeDetail perAttendanceWrkTypeDetail) {
        this.perAttendanceWrkTypeDetail = perAttendanceWrkTypeDetail;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="COUNTRY_CODE_BIRTH", referencedColumnName="COUNTRY_CODE"), 
        @JoinColumn(name="GOV_CODE", referencedColumnName="GOV_CODE"), 
        @JoinColumn(name="CITY_CODE", referencedColumnName="CITY_CODE") } )
    public PerCityCode getPerCityCode() {
        return this.perCityCode;
    }
    
    public void setPerCityCode(PerCityCode perCityCode) {
        this.perCityCode = perCityCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="EMPLOYMENT_SOURCE_CODE", nullable=false)
    public PerEmploymentParameter getPerEmploymentParameter() {
        return this.perEmploymentParameter;
    }
    
    public void setPerEmploymentParameter(PerEmploymentParameter perEmploymentParameter) {
        this.perEmploymentParameter = perEmploymentParameter;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="COUNTRY_CODE_FROM", referencedColumnName="COUNTRY_CODE"), 
        @JoinColumn(name="EXTERNAL_SIDE_CODE_FROM", referencedColumnName="EXTERNAL_SIDE_CODE") } )
    public PerExternalSideCode getPerExternalSideCodeByPeremPerescFromFk() {
        return this.perExternalSideCodeByPeremPerescFromFk;
    }
    
    public void setPerExternalSideCodeByPeremPerescFromFk(PerExternalSideCode perExternalSideCodeByPeremPerescFromFk) {
        this.perExternalSideCodeByPeremPerescFromFk = perExternalSideCodeByPeremPerescFromFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="COUNTRY_CODE", referencedColumnName="COUNTRY_CODE"), 
        @JoinColumn(name="EXTERNAL_SIDE_CODE", referencedColumnName="EXTERNAL_SIDE_CODE") } )
    public PerExternalSideCode getPerExternalSideCodeByPeremPerescFk() {
        return this.perExternalSideCodeByPeremPerescFk;
    }
    
    public void setPerExternalSideCodeByPeremPerescFk(PerExternalSideCode perExternalSideCodeByPeremPerescFk) {
        this.perExternalSideCodeByPeremPerescFk = perExternalSideCodeByPeremPerescFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FISCAL_DEGREE_CODE")
    public PerFiscalDegreeCode getPerFiscalDegreeCode() {
        return this.perFiscalDegreeCode;
    }
    
    public void setPerFiscalDegreeCode(PerFiscalDegreeCode perFiscalDegreeCode) {
        this.perFiscalDegreeCode = perFiscalDegreeCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="GENERAL_CODE_FIRST")
    public PerGeneralCode getPerGeneralCodeByGeneralCodeFirst() {
        return this.perGeneralCodeByGeneralCodeFirst;
    }
    
    public void setPerGeneralCodeByGeneralCodeFirst(PerGeneralCode perGeneralCodeByGeneralCodeFirst) {
        this.perGeneralCodeByGeneralCodeFirst = perGeneralCodeByGeneralCodeFirst;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="GENERAL_CODE", nullable=false)
    public PerGeneralCode getPerGeneralCodeByGeneralCode() {
        return this.perGeneralCodeByGeneralCode;
    }
    
    public void setPerGeneralCodeByGeneralCode(PerGeneralCode perGeneralCodeByGeneralCode) {
        this.perGeneralCodeByGeneralCode = perGeneralCodeByGeneralCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="GROUP_TYPE_CODE")
    public PerGroupTypeCode getPerGroupTypeCode() {
        return this.perGroupTypeCode;
    }
    
    public void setPerGroupTypeCode(PerGroupTypeCode perGroupTypeCode) {
        this.perGroupTypeCode = perGroupTypeCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="INSURANCE_SIDE_CODE")
    public PerInsuranceSideCode getPerInsuranceSideCode() {
        return this.perInsuranceSideCode;
    }
    
    public void setPerInsuranceSideCode(PerInsuranceSideCode perInsuranceSideCode) {
        this.perInsuranceSideCode = perInsuranceSideCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="JOB_CODE_TRANSFER")
    public PerJobCode getPerJobCodeByJobCodeTransfer() {
        return this.perJobCodeByJobCodeTransfer;
    }
    
    public void setPerJobCodeByJobCodeTransfer(PerJobCode perJobCodeByJobCodeTransfer) {
        this.perJobCodeByJobCodeTransfer = perJobCodeByJobCodeTransfer;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="JOB_CODE", nullable=false)
    public PerJobCode getPerJobCodeByJobCode() {
        return this.perJobCodeByJobCode;
    }
    
    public void setPerJobCodeByJobCode(PerJobCode perJobCodeByJobCode) {
        this.perJobCodeByJobCode = perJobCodeByJobCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="LOC_CODE", referencedColumnName="LOC_CODE", nullable=false), 
        @JoinColumn(name="LOCATION_CODE", referencedColumnName="LOCATION_CODE", nullable=false) } )
    public PerLocationCodes getPerLocationCodes() {
        return this.perLocationCodes;
    }
    
    public void setPerLocationCodes(PerLocationCodes perLocationCodes) {
        this.perLocationCodes = perLocationCodes;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="MARITAL_CODE")
    public PerMaritalCode getPerMaritalCode() {
        return this.perMaritalCode;
    }
    
    public void setPerMaritalCode(PerMaritalCode perMaritalCode) {
        this.perMaritalCode = perMaritalCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="MILITARY_CODE")
    public PerMilitaryCode getPerMilitaryCode() {
        return this.perMilitaryCode;
    }
    
    public void setPerMilitaryCode(PerMilitaryCode perMilitaryCode) {
        this.perMilitaryCode = perMilitaryCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="MOSQUE_CODE")
    public PerMosqueCode getPerMosqueCode() {
        return this.perMosqueCode;
    }
    
    public void setPerMosqueCode(PerMosqueCode perMosqueCode) {
        this.perMosqueCode = perMosqueCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="NATIONAL_CODE")
    public PerNationalCode getPerNationalCode() {
        return this.perNationalCode;
    }
    
    public void setPerNationalCode(PerNationalCode perNationalCode) {
        this.perNationalCode = perNationalCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ORG_ID_FROM")
    public PerOrganizationStructure getPerOrganizationStructureByOrgIdFrom() {
        return this.perOrganizationStructureByOrgIdFrom;
    }
    
    public void setPerOrganizationStructureByOrgIdFrom(PerOrganizationStructure perOrganizationStructureByOrgIdFrom) {
        this.perOrganizationStructureByOrgIdFrom = perOrganizationStructureByOrgIdFrom;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ORG_ID")
    public PerOrganizationStructure getPerOrganizationStructureByOrgId() {
        return this.perOrganizationStructureByOrgId;
    }
    
    public void setPerOrganizationStructureByOrgId(PerOrganizationStructure perOrganizationStructureByOrgId) {
        this.perOrganizationStructureByOrgId = perOrganizationStructureByOrgId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ORGUNIT_CODE")
    public PerOrgunitCode getPerOrgunitCodeByOrgunitCode() {
        return this.perOrgunitCodeByOrgunitCode;
    }
    
    public void setPerOrgunitCodeByOrgunitCode(PerOrgunitCode perOrgunitCodeByOrgunitCode) {
        this.perOrgunitCodeByOrgunitCode = perOrgunitCodeByOrgunitCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ORGUNIT_CODE_FROM")
    public PerOrgunitCode getPerOrgunitCodeByOrgunitCodeFrom() {
        return this.perOrgunitCodeByOrgunitCodeFrom;
    }
    
    public void setPerOrgunitCodeByOrgunitCodeFrom(PerOrgunitCode perOrgunitCodeByOrgunitCodeFrom) {
        this.perOrgunitCodeByOrgunitCodeFrom = perOrgunitCodeByOrgunitCodeFrom;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="QUAL_CODE_FIRST")
    public PerQualCode getPerQualCodeByQualCodeFirst() {
        return this.perQualCodeByQualCodeFirst;
    }
    
    public void setPerQualCodeByQualCodeFirst(PerQualCode perQualCodeByQualCodeFirst) {
        this.perQualCodeByQualCodeFirst = perQualCodeByQualCodeFirst;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="QUAL_CODE_BEGIN")
    public PerQualCode getPerQualCodeByQualCodeBegin() {
        return this.perQualCodeByQualCodeBegin;
    }
    
    public void setPerQualCodeByQualCodeBegin(PerQualCode perQualCodeByQualCodeBegin) {
        this.perQualCodeByQualCodeBegin = perQualCodeByQualCodeBegin;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="QUAL_CODE")
    public PerQualCode getPerQualCodeByQualCode() {
        return this.perQualCodeByQualCode;
    }
    
    public void setPerQualCodeByQualCode(PerQualCode perQualCodeByQualCode) {
        this.perQualCodeByQualCode = perQualCodeByQualCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="RELIGON_CODE")
    public PerReligonCode getPerReligonCode() {
        return this.perReligonCode;
    }
    
    public void setPerReligonCode(PerReligonCode perReligonCode) {
        this.perReligonCode = perReligonCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="PROJECT_CODE_FROM", referencedColumnName="PROJECT_CODE"), 
        @JoinColumn(name="PROJECT_SUB_CODE_FROM", referencedColumnName="PROJECT_SUB_CODE") } )
    public BudProjectSub getBudProjectSubByPeremBudProjSFromFk() {
        return this.budProjectSubByPeremBudProjSFromFk;
    }
    
    public void setBudProjectSubByPeremBudProjSFromFk(BudProjectSub budProjectSubByPeremBudProjSFromFk) {
        this.budProjectSubByPeremBudProjSFromFk = budProjectSubByPeremBudProjSFromFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="PROJECT_CODE", referencedColumnName="PROJECT_CODE"), 
        @JoinColumn(name="PROJECT_SUB_CODE", referencedColumnName="PROJECT_SUB_CODE") } )
    public BudProjectSub getBudProjectSubByPeremBudProjSFk() {
        return this.budProjectSubByPeremBudProjSFk;
    }
    
    public void setBudProjectSubByPeremBudProjSFk(BudProjectSub budProjectSubByPeremBudProjSFk) {
        this.budProjectSubByPeremBudProjSFk = budProjectSubByPeremBudProjSFk;
    }

    
    @Column(name="EMPLOYEE_NO", nullable=false, length=10)
    public String getEmployeeNo() {
        return this.employeeNo;
    }
    
    public void setEmployeeNo(String employeeNo) {
        this.employeeNo = employeeNo;
    }

    
    @Column(name="NATIONAL_NO", length=15)
    public String getNationalNo() {
        return this.nationalNo;
    }
    
    public void setNationalNo(String nationalNo) {
        this.nationalNo = nationalNo;
    }

    
    @Column(name="INSURANCE_NO", length=15)
    public String getInsuranceNo() {
        return this.insuranceNo;
    }
    
    public void setInsuranceNo(String insuranceNo) {
        this.insuranceNo = insuranceNo;
    }

    
    @Column(name="EMP_ANAME", nullable=false, length=75)
    public String getEmpAname() {
        return this.empAname;
    }
    
    public void setEmpAname(String empAname) {
        this.empAname = empAname;
    }

    
    @Column(name="EMP_ENAME", length=75)
    public String getEmpEname() {
        return this.empEname;
    }
    
    public void setEmpEname(String empEname) {
        this.empEname = empEname;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="BIRTH_DATE", length=7)
    public Date getBirthDate() {
        return this.birthDate;
    }
    
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="START_CONTRACT_DATE", length=7)
    public Date getStartContractDate() {
        return this.startContractDate;
    }
    
    public void setStartContractDate(Date startContractDate) {
        this.startContractDate = startContractDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="CONTRACT_DATE", nullable=false, length=7)
    public Date getContractDate() {
        return this.contractDate;
    }
    
    public void setContractDate(Date contractDate) {
        this.contractDate = contractDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="WORK_START_DATE", length=7)
    public Date getWorkStartDate() {
        return this.workStartDate;
    }
    
    public void setWorkStartDate(Date workStartDate) {
        this.workStartDate = workStartDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="CONTRACT_ENDDATE", length=7)
    public Date getContractEnddate() {
        return this.contractEnddate;
    }
    
    public void setContractEnddate(Date contractEnddate) {
        this.contractEnddate = contractEnddate;
    }

    
    @Column(name="REQUEST_NO", length=10)
    public String getRequestNo() {
        return this.requestNo;
    }
    
    public void setRequestNo(String requestNo) {
        this.requestNo = requestNo;
    }

    
    @Column(name="DECISION_NO", length=10)
    public String getDecisionNo() {
        return this.decisionNo;
    }
    
    public void setDecisionNo(String decisionNo) {
        this.decisionNo = decisionNo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DECISION_DATE", length=7)
    public Date getDecisionDate() {
        return this.decisionDate;
    }
    
    public void setDecisionDate(Date decisionDate) {
        this.decisionDate = decisionDate;
    }

    
    @Column(name="TEST_PERIOD", precision=3, scale=0)
    public Short getTestPeriod() {
        return this.testPeriod;
    }
    
    public void setTestPeriod(Short testPeriod) {
        this.testPeriod = testPeriod;
    }

    
    @Column(name="WORNING_PERIOD", precision=5, scale=0)
    public Integer getWorningPeriod() {
        return this.worningPeriod;
    }
    
    public void setWorningPeriod(Integer worningPeriod) {
        this.worningPeriod = worningPeriod;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DEGREE_DATE", length=7)
    public Date getDegreeDate() {
        return this.degreeDate;
    }
    
    public void setDegreeDate(Date degreeDate) {
        this.degreeDate = degreeDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DEGREE_PRIORITY_DATE", length=7)
    public Date getDegreePriorityDate() {
        return this.degreePriorityDate;
    }
    
    public void setDegreePriorityDate(Date degreePriorityDate) {
        this.degreePriorityDate = degreePriorityDate;
    }

    
    @Column(name="DEGREE_PRIORITY", precision=5, scale=0)
    public Integer getDegreePriority() {
        return this.degreePriority;
    }
    
    public void setDegreePriority(Integer degreePriority) {
        this.degreePriority = degreePriority;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="JOB_DATE", length=7)
    public Date getJobDate() {
        return this.jobDate;
    }
    
    public void setJobDate(Date jobDate) {
        this.jobDate = jobDate;
    }

    
    @Column(name="BASIC_SALARY_VALUE", precision=9)
    public BigDecimal getBasicSalaryValue() {
        return this.basicSalaryValue;
    }
    
    public void setBasicSalaryValue(BigDecimal basicSalaryValue) {
        this.basicSalaryValue = basicSalaryValue;
    }

    
    @Column(name="SALARY_VALUE", precision=9)
    public BigDecimal getSalaryValue() {
        return this.salaryValue;
    }
    
    public void setSalaryValue(BigDecimal salaryValue) {
        this.salaryValue = salaryValue;
    }

    
    @Column(name="CONTRACT_VALUE", precision=9)
    public BigDecimal getContractValue() {
        return this.contractValue;
    }
    
    public void setContractValue(BigDecimal contractValue) {
        this.contractValue = contractValue;
    }

    
    @Column(name="DESERVE_NO", precision=2, scale=0)
    public Byte getDeserveNo() {
        return this.deserveNo;
    }
    
    public void setDeserveNo(Byte deserveNo) {
        this.deserveNo = deserveNo;
    }

    
    @Column(name="EMP_FILENO", length=10)
    public String getEmpFileno() {
        return this.empFileno;
    }
    
    public void setEmpFileno(String empFileno) {
        this.empFileno = empFileno;
    }

    
    @Column(name="EMP_FILE_POSITION", length=30)
    public String getEmpFilePosition() {
        return this.empFilePosition;
    }
    
    public void setEmpFilePosition(String empFilePosition) {
        this.empFilePosition = empFilePosition;
    }

    
    @Column(name="EMP_JOB_FLAG", precision=1, scale=0)
    public Boolean getEmpJobFlag() {
        return this.empJobFlag;
    }
    
    public void setEmpJobFlag(Boolean empJobFlag) {
        this.empJobFlag = empJobFlag;
    }

    
    @Column(name="EMP_FLAG", precision=1, scale=0)
    public Boolean getEmpFlag() {
        return this.empFlag;
    }
    
    public void setEmpFlag(Boolean empFlag) {
        this.empFlag = empFlag;
    }

    
    @Column(name="SEX_FLAG", nullable=false, precision=1, scale=0)
    public Byte getSexFlag() {
        return this.sexFlag;
    }
    
    public void setSexFlag(Byte sexFlag) {
        this.sexFlag = sexFlag;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="QUAL_YEAR", length=7)
    public Date getQualYear() {
        return this.qualYear;
    }
    
    public void setQualYear(Date qualYear) {
        this.qualYear = qualYear;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="MILITARY_DATE", length=7)
    public Date getMilitaryDate() {
        return this.militaryDate;
    }
    
    public void setMilitaryDate(Date militaryDate) {
        this.militaryDate = militaryDate;
    }

    
    @Column(name="MILITARY_CARD_NO", length=30)
    public String getMilitaryCardNo() {
        return this.militaryCardNo;
    }
    
    public void setMilitaryCardNo(String militaryCardNo) {
        this.militaryCardNo = militaryCardNo;
    }

    
    @Column(name="NO_FOR_CONSTANT_ELAWA", precision=2, scale=0)
    public Byte getNoForConstantElawa() {
        return this.noForConstantElawa;
    }
    
    public void setNoForConstantElawa(Byte noForConstantElawa) {
        this.noForConstantElawa = noForConstantElawa;
    }

    
    @Column(name="ORG_FLAG", nullable=false, precision=1, scale=0)
    public Byte getOrgFlag() {
        return this.orgFlag;
    }
    
    public void setOrgFlag(Byte orgFlag) {
        this.orgFlag = orgFlag;
    }

    
    @Column(name="ORG_FLAG_FROM", precision=1, scale=0)
    public Boolean getOrgFlagFrom() {
        return this.orgFlagFrom;
    }
    
    public void setOrgFlagFrom(Boolean orgFlagFrom) {
        this.orgFlagFrom = orgFlagFrom;
    }

    
    @Column(name="CLASS_CODE", length=10)
    public String getClassCode() {
        return this.classCode;
    }
    
    public void setClassCode(String classCode) {
        this.classCode = classCode;
    }

    
    @Column(name="CATEGORY_CODE", length=10)
    public String getCategoryCode() {
        return this.categoryCode;
    }
    
    public void setCategoryCode(String categoryCode) {
        this.categoryCode = categoryCode;
    }

    
    @Column(name="FOOD_CARD", precision=1, scale=0)
    public Boolean getFoodCard() {
        return this.foodCard;
    }
    
    public void setFoodCard(Boolean foodCard) {
        this.foodCard = foodCard;
    }

    
    @Column(name="FOOD_CARD_TYPE", precision=1, scale=0)
    public Boolean getFoodCardType() {
        return this.foodCardType;
    }
    
    public void setFoodCardType(Boolean foodCardType) {
        this.foodCardType = foodCardType;
    }

    
    @Column(name="EMAIL_WORK", length=50)
    public String getEmailWork() {
        return this.emailWork;
    }
    
    public void setEmailWork(String emailWork) {
        this.emailWork = emailWork;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="QUAL_YEAR_FIRST", length=7)
    public Date getQualYearFirst() {
        return this.qualYearFirst;
    }
    
    public void setQualYearFirst(Date qualYearFirst) {
        this.qualYearFirst = qualYearFirst;
    }

    
    @Column(name="WRK_TYPE_DECISION_NO", length=15)
    public String getWrkTypeDecisionNo() {
        return this.wrkTypeDecisionNo;
    }
    
    public void setWrkTypeDecisionNo(String wrkTypeDecisionNo) {
        this.wrkTypeDecisionNo = wrkTypeDecisionNo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="WRK_TYPE_DECISION_DATE", length=7)
    public Date getWrkTypeDecisionDate() {
        return this.wrkTypeDecisionDate;
    }
    
    public void setWrkTypeDecisionDate(Date wrkTypeDecisionDate) {
        this.wrkTypeDecisionDate = wrkTypeDecisionDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="WRK_TYPE_FROM_DATE", length=7)
    public Date getWrkTypeFromDate() {
        return this.wrkTypeFromDate;
    }
    
    public void setWrkTypeFromDate(Date wrkTypeFromDate) {
        this.wrkTypeFromDate = wrkTypeFromDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="WRK_TYPE_TO_DATE", length=7)
    public Date getWrkTypeToDate() {
        return this.wrkTypeToDate;
    }
    
    public void setWrkTypeToDate(Date wrkTypeToDate) {
        this.wrkTypeToDate = wrkTypeToDate;
    }

    
    @Column(name="WRK_TYPE_SALARY_RATIO", precision=5)
    public BigDecimal getWrkTypeSalaryRatio() {
        return this.wrkTypeSalaryRatio;
    }
    
    public void setWrkTypeSalaryRatio(BigDecimal wrkTypeSalaryRatio) {
        this.wrkTypeSalaryRatio = wrkTypeSalaryRatio;
    }

    
    @Column(name="WRK_TYPE_NOTES", length=250)
    public String getWrkTypeNotes() {
        return this.wrkTypeNotes;
    }
    
    public void setWrkTypeNotes(String wrkTypeNotes) {
        this.wrkTypeNotes = wrkTypeNotes;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="EXTERNAL_STARTDATE", length=7)
    public Date getExternalStartdate() {
        return this.externalStartdate;
    }
    
    public void setExternalStartdate(Date externalStartdate) {
        this.externalStartdate = externalStartdate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="EXTERNAL_ENDDATE", length=7)
    public Date getExternalEnddate() {
        return this.externalEnddate;
    }
    
    public void setExternalEnddate(Date externalEnddate) {
        this.externalEnddate = externalEnddate;
    }

    
    @Column(name="RECORD_CREATE_USER", length=15)
    public String getRecordCreateUser() {
        return this.recordCreateUser;
    }
    
    public void setRecordCreateUser(String recordCreateUser) {
        this.recordCreateUser = recordCreateUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_CREATE_DATE", length=7)
    public Date getRecordCreateDate() {
        return this.recordCreateDate;
    }
    
    public void setRecordCreateDate(Date recordCreateDate) {
        this.recordCreateDate = recordCreateDate;
    }

    
    @Column(name="RECORD_UPDATE_USER", length=15)
    public String getRecordUpdateUser() {
        return this.recordUpdateUser;
    }
    
    public void setRecordUpdateUser(String recordUpdateUser) {
        this.recordUpdateUser = recordUpdateUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_UPDATE_DATE", length=7)
    public Date getRecordUpdateDate() {
        return this.recordUpdateDate;
    }
    
    public void setRecordUpdateDate(Date recordUpdateDate) {
        this.recordUpdateDate = recordUpdateDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="JOB_DATE_TRANSFER", length=7)
    public Date getJobDateTransfer() {
        return this.jobDateTransfer;
    }
    
    public void setJobDateTransfer(Date jobDateTransfer) {
        this.jobDateTransfer = jobDateTransfer;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="QUAL_YEAR_BEGIN", length=7)
    public Date getQualYearBegin() {
        return this.qualYearBegin;
    }
    
    public void setQualYearBegin(Date qualYearBegin) {
        this.qualYearBegin = qualYearBegin;
    }

    
    @Column(name="CHK_SPECIAL_NEEDS", precision=1, scale=0)
    public Boolean getChkSpecialNeeds() {
        return this.chkSpecialNeeds;
    }
    
    public void setChkSpecialNeeds(Boolean chkSpecialNeeds) {
        this.chkSpecialNeeds = chkSpecialNeeds;
    }

    
    @Column(name="CADRE_KIND", precision=1, scale=0)
    public Boolean getCadreKind() {
        return this.cadreKind;
    }
    
    public void setCadreKind(Boolean cadreKind) {
        this.cadreKind = cadreKind;
    }

    
    @Column(name="JOB_SALARY_VALUE", precision=9)
    public BigDecimal getJobSalaryValue() {
        return this.jobSalaryValue;
    }
    
    public void setJobSalaryValue(BigDecimal jobSalaryValue) {
        this.jobSalaryValue = jobSalaryValue;
    }

    
    @Column(name="LOG_USER_ID", length=15)
    public String getLogUserId() {
        return this.logUserId;
    }
    
    public void setLogUserId(String logUserId) {
        this.logUserId = logUserId;
    }

    
    @Column(name="LOG_FUNCTION_NAME", length=25)
    public String getLogFunctionName() {
        return this.logFunctionName;
    }
    
    public void setLogFunctionName(String logFunctionName) {
        this.logFunctionName = logFunctionName;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMastersByEmployeeIdBoss")
    public Set<PerEmpVacationReqJava> getPerEmpVacationReqJavasForEmployeeIdBoss() {
        return this.perEmpVacationReqJavasForEmployeeIdBoss;
    }
    
    public void setPerEmpVacationReqJavasForEmployeeIdBoss(Set<PerEmpVacationReqJava> perEmpVacationReqJavasForEmployeeIdBoss) {
        this.perEmpVacationReqJavasForEmployeeIdBoss = perEmpVacationReqJavasForEmployeeIdBoss;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerComplaintData> getPerComplaintDatas() {
        return this.perComplaintDatas;
    }
    
    public void setPerComplaintDatas(Set<PerComplaintData> perComplaintDatas) {
        this.perComplaintDatas = perComplaintDatas;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerAnnualEvalModelEmp> getPerAnnualEvalModelEmps() {
        return this.perAnnualEvalModelEmps;
    }
    
    public void setPerAnnualEvalModelEmps(Set<PerAnnualEvalModelEmp> perAnnualEvalModelEmps) {
        this.perAnnualEvalModelEmps = perAnnualEvalModelEmps;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerAnnualEvalModEmpTot> getPerAnnualEvalModEmpTots() {
        return this.perAnnualEvalModEmpTots;
    }
    
    public void setPerAnnualEvalModEmpTots(Set<PerAnnualEvalModEmpTot> perAnnualEvalModEmpTots) {
        this.perAnnualEvalModEmpTots = perAnnualEvalModEmpTots;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpFile> getPerEmpFiles() {
        return this.perEmpFiles;
    }
    
    public void setPerEmpFiles(Set<PerEmpFile> perEmpFiles) {
        this.perEmpFiles = perEmpFiles;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpPromotion> getPerEmpPromotions() {
        return this.perEmpPromotions;
    }
    
    public void setPerEmpPromotions(Set<PerEmpPromotion> perEmpPromotions) {
        this.perEmpPromotions = perEmpPromotions;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerElawaTransactionReject> getPerElawaTransactionRejects() {
        return this.perElawaTransactionRejects;
    }
    
    public void setPerElawaTransactionRejects(Set<PerElawaTransactionReject> perElawaTransactionRejects) {
        this.perElawaTransactionRejects = perElawaTransactionRejects;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpVacationBalance> getPerEmpVacationBalances() {
        return this.perEmpVacationBalances;
    }
    
    public void setPerEmpVacationBalances(Set<PerEmpVacationBalance> perEmpVacationBalances) {
        this.perEmpVacationBalances = perEmpVacationBalances;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PayEmployeeReq> getPayEmployeeReqs() {
        return this.payEmployeeReqs;
    }
    
    public void setPayEmployeeReqs(Set<PayEmployeeReq> payEmployeeReqs) {
        this.payEmployeeReqs = payEmployeeReqs;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public PayEmployeeMaster getPayEmployeeMaster() {
        return this.payEmployeeMaster;
    }
    
    public void setPayEmployeeMaster(PayEmployeeMaster payEmployeeMaster) {
        this.payEmployeeMaster = payEmployeeMaster;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpVacationTrans> getPerEmpVacationTranses() {
        return this.perEmpVacationTranses;
    }
    
    public void setPerEmpVacationTranses(Set<PerEmpVacationTrans> perEmpVacationTranses) {
        this.perEmpVacationTranses = perEmpVacationTranses;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpDecisionSheet> getPerEmpDecisionSheets() {
        return this.perEmpDecisionSheets;
    }
    
    public void setPerEmpDecisionSheets(Set<PerEmpDecisionSheet> perEmpDecisionSheets) {
        this.perEmpDecisionSheets = perEmpDecisionSheets;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<AppEmployeeReqJ222> getAppEmployeeReqJ222s() {
        return this.appEmployeeReqJ222s;
    }
    
    public void setAppEmployeeReqJ222s(Set<AppEmployeeReqJ222> appEmployeeReqJ222s) {
        this.appEmployeeReqJ222s = appEmployeeReqJ222s;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpHistory> getPerEmpHistories() {
        return this.perEmpHistories;
    }
    
    public void setPerEmpHistories(Set<PerEmpHistory> perEmpHistories) {
        this.perEmpHistories = perEmpHistories;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<AppEmployeeReqJ444> getAppEmployeeReqJ444s() {
        return this.appEmployeeReqJ444s;
    }
    
    public void setAppEmployeeReqJ444s(Set<AppEmployeeReqJ444> appEmployeeReqJ444s) {
        this.appEmployeeReqJ444s = appEmployeeReqJ444s;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public PerUsers getPerUsers() {
        return this.perUsers;
    }
    
    public void setPerUsers(PerUsers perUsers) {
        this.perUsers = perUsers;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpPromotionNew> getPerEmpPromotionNews() {
        return this.perEmpPromotionNews;
    }
    
    public void setPerEmpPromotionNews(Set<PerEmpPromotionNew> perEmpPromotionNews) {
        this.perEmpPromotionNews = perEmpPromotionNews;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpQualification> getPerEmpQualifications() {
        return this.perEmpQualifications;
    }
    
    public void setPerEmpQualifications(Set<PerEmpQualification> perEmpQualifications) {
        this.perEmpQualifications = perEmpQualifications;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerElawaTransaction> getPerElawaTransactions() {
        return this.perElawaTransactions;
    }
    
    public void setPerElawaTransactions(Set<PerElawaTransaction> perElawaTransactions) {
        this.perElawaTransactions = perElawaTransactions;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerAnnualEvalEmp> getPerAnnualEvalEmps() {
        return this.perAnnualEvalEmps;
    }
    
    public void setPerAnnualEvalEmps(Set<PerAnnualEvalEmp> perAnnualEvalEmps) {
        this.perAnnualEvalEmps = perAnnualEvalEmps;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public Set<PerEmpPromotionRejectNew> getPerEmpPromotionRejectNews() {
        return this.perEmpPromotionRejectNews;
    }
    
    public void setPerEmpPromotionRejectNews(Set<PerEmpPromotionRejectNew> perEmpPromotionRejectNews) {
        this.perEmpPromotionRejectNews = perEmpPromotionRejectNews;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMastersByEmployeeId")
    public Set<AppSubElemSpecAuth> getAppSubElemSpecAuthsForEmployeeId() {
        return this.appSubElemSpecAuthsForEmployeeId;
    }
    
    public void setAppSubElemSpecAuthsForEmployeeId(Set<AppSubElemSpecAuth> appSubElemSpecAuthsForEmployeeId) {
        this.appSubElemSpecAuthsForEmployeeId = appSubElemSpecAuthsForEmployeeId;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMastersByEmployeeIdAction")
    public Set<AppSubElemSpecAuth> getAppSubElemSpecAuthsForEmployeeIdAction() {
        return this.appSubElemSpecAuthsForEmployeeIdAction;
    }
    
    public void setAppSubElemSpecAuthsForEmployeeIdAction(Set<AppSubElemSpecAuth> appSubElemSpecAuthsForEmployeeIdAction) {
        this.appSubElemSpecAuthsForEmployeeIdAction = appSubElemSpecAuthsForEmployeeIdAction;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMastersByEmployeeId")
    public Set<PerEmpVacationReqJava> getPerEmpVacationReqJavasForEmployeeId() {
        return this.perEmpVacationReqJavasForEmployeeId;
    }
    
    public void setPerEmpVacationReqJavasForEmployeeId(Set<PerEmpVacationReqJava> perEmpVacationReqJavasForEmployeeId) {
        this.perEmpVacationReqJavasForEmployeeId = perEmpVacationReqJavasForEmployeeId;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMastersByEmployeeId")
    public Set<AppSubTabSpecAuth> getAppSubTabSpecAuthsForEmployeeId() {
        return this.appSubTabSpecAuthsForEmployeeId;
    }
    
    public void setAppSubTabSpecAuthsForEmployeeId(Set<AppSubTabSpecAuth> appSubTabSpecAuthsForEmployeeId) {
        this.appSubTabSpecAuthsForEmployeeId = appSubTabSpecAuthsForEmployeeId;
    }

@OneToOne(fetch=FetchType.EAGER, mappedBy="perEmploymentMasters")
    public PerEmpPhoto getPerEmpPhoto() {
        return this.perEmpPhoto;
    }
    
    public void setPerEmpPhoto(PerEmpPhoto perEmpPhoto) {
        this.perEmpPhoto = perEmpPhoto;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perEmploymentMastersByEmployeeIdAction")
    public Set<AppSubTabSpecAuth> getAppSubTabSpecAuthsForEmployeeIdAction() {
        return this.appSubTabSpecAuthsForEmployeeIdAction;
    }
    
    public void setAppSubTabSpecAuthsForEmployeeIdAction(Set<AppSubTabSpecAuth> appSubTabSpecAuthsForEmployeeIdAction) {
        this.appSubTabSpecAuthsForEmployeeIdAction = appSubTabSpecAuthsForEmployeeIdAction;
    }




}


