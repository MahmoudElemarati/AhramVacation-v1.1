package com.ahramattend.www._0_0_0_2_0_DB_Entities;
// Generated Mar 9, 2021 2:52:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PerDesicionSideCode generated by hbm2java
 */
@Entity
@Table(name="PER_DESICION_SIDE_CODE"
    ,schema="SHAMS"
)
public class PerDesicionSideCode  implements java.io.Serializable {


     private String desicionSideCode;
     private String desicionSideName;
     private byte desicionSideOrder;
     private String recordCreateUser;
     private Date recordCreateDate;
     private String recordUpdateUser;
     private Date recordUpdateDate;
     private Set<PerComplaintData> perComplaintDatas = new HashSet<PerComplaintData>(0);
     private Set<PerDecisionSheet> perDecisionSheets = new HashSet<PerDecisionSheet>(0);

    public PerDesicionSideCode() {
    }

	
    public PerDesicionSideCode(String desicionSideCode, String desicionSideName, byte desicionSideOrder) {
        this.desicionSideCode = desicionSideCode;
        this.desicionSideName = desicionSideName;
        this.desicionSideOrder = desicionSideOrder;
    }
    public PerDesicionSideCode(String desicionSideCode, String desicionSideName, byte desicionSideOrder, String recordCreateUser, Date recordCreateDate, String recordUpdateUser, Date recordUpdateDate, Set<PerComplaintData> perComplaintDatas, Set<PerDecisionSheet> perDecisionSheets) {
       this.desicionSideCode = desicionSideCode;
       this.desicionSideName = desicionSideName;
       this.desicionSideOrder = desicionSideOrder;
       this.recordCreateUser = recordCreateUser;
       this.recordCreateDate = recordCreateDate;
       this.recordUpdateUser = recordUpdateUser;
       this.recordUpdateDate = recordUpdateDate;
       this.perComplaintDatas = perComplaintDatas;
       this.perDecisionSheets = perDecisionSheets;
    }
   
     @Id 

    
    @Column(name="DESICION_SIDE_CODE", unique=true, nullable=false, length=5)
    public String getDesicionSideCode() {
        return this.desicionSideCode;
    }
    
    public void setDesicionSideCode(String desicionSideCode) {
        this.desicionSideCode = desicionSideCode;
    }

    
    @Column(name="DESICION_SIDE_NAME", nullable=false, length=50)
    public String getDesicionSideName() {
        return this.desicionSideName;
    }
    
    public void setDesicionSideName(String desicionSideName) {
        this.desicionSideName = desicionSideName;
    }

    
    @Column(name="DESICION_SIDE_ORDER", nullable=false, precision=2, scale=0)
    public byte getDesicionSideOrder() {
        return this.desicionSideOrder;
    }
    
    public void setDesicionSideOrder(byte desicionSideOrder) {
        this.desicionSideOrder = desicionSideOrder;
    }

    
    @Column(name="RECORD_CREATE_USER", length=15)
    public String getRecordCreateUser() {
        return this.recordCreateUser;
    }
    
    public void setRecordCreateUser(String recordCreateUser) {
        this.recordCreateUser = recordCreateUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_CREATE_DATE", length=7)
    public Date getRecordCreateDate() {
        return this.recordCreateDate;
    }
    
    public void setRecordCreateDate(Date recordCreateDate) {
        this.recordCreateDate = recordCreateDate;
    }

    
    @Column(name="RECORD_UPDATE_USER", length=15)
    public String getRecordUpdateUser() {
        return this.recordUpdateUser;
    }
    
    public void setRecordUpdateUser(String recordUpdateUser) {
        this.recordUpdateUser = recordUpdateUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_UPDATE_DATE", length=7)
    public Date getRecordUpdateDate() {
        return this.recordUpdateDate;
    }
    
    public void setRecordUpdateDate(Date recordUpdateDate) {
        this.recordUpdateDate = recordUpdateDate;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perDesicionSideCode")
    public Set<PerComplaintData> getPerComplaintDatas() {
        return this.perComplaintDatas;
    }
    
    public void setPerComplaintDatas(Set<PerComplaintData> perComplaintDatas) {
        this.perComplaintDatas = perComplaintDatas;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="perDesicionSideCode")
    public Set<PerDecisionSheet> getPerDecisionSheets() {
        return this.perDecisionSheets;
    }
    
    public void setPerDecisionSheets(Set<PerDecisionSheet> perDecisionSheets) {
        this.perDecisionSheets = perDecisionSheets;
    }




}


