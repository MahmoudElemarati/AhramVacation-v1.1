package com.ahramattend.www._0_0_0_2_0_DB_Entities;
// Generated Mar 9, 2021 2:52:01 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PayDeserveEmpFile generated by hbm2java
 */
@Entity
@Table(name="PAY_DESERVE_EMP_FILE"
    ,schema="SHAMS"
)
public class PayDeserveEmpFile  implements java.io.Serializable {


     private PayDeserveEmpFileId id;
     private PayLocationBandFile payLocationBandFile;
     private PayEmployeeMaster payEmployeeMasterByEmployeeIdSent;
     private PayEmployeeMaster payEmployeeMasterByEmployeeId;
     private PayExecutionOpen payExecutionOpen;
     private NvUsers nvUsers;
     private Byte chkStatus;
     private Date currDate;
     private String currTime;
     private Date sendDate;
     private String sendTime;
     private Date pickDate;
     private String pickTime;
     private String rmrk;
     private Set<PayDeserveEmpFileDtlRuf> payDeserveEmpFileDtlRufs = new HashSet<PayDeserveEmpFileDtlRuf>(0);
     private Set<PayDeserveEmpFileDtl> payDeserveEmpFileDtls = new HashSet<PayDeserveEmpFileDtl>(0);

    public PayDeserveEmpFile() {
    }

	
    public PayDeserveEmpFile(PayDeserveEmpFileId id, PayLocationBandFile payLocationBandFile, PayExecutionOpen payExecutionOpen) {
        this.id = id;
        this.payLocationBandFile = payLocationBandFile;
        this.payExecutionOpen = payExecutionOpen;
    }
    public PayDeserveEmpFile(PayDeserveEmpFileId id, PayLocationBandFile payLocationBandFile, PayEmployeeMaster payEmployeeMasterByEmployeeIdSent, PayEmployeeMaster payEmployeeMasterByEmployeeId, PayExecutionOpen payExecutionOpen, NvUsers nvUsers, Byte chkStatus, Date currDate, String currTime, Date sendDate, String sendTime, Date pickDate, String pickTime, String rmrk, Set<PayDeserveEmpFileDtlRuf> payDeserveEmpFileDtlRufs, Set<PayDeserveEmpFileDtl> payDeserveEmpFileDtls) {
       this.id = id;
       this.payLocationBandFile = payLocationBandFile;
       this.payEmployeeMasterByEmployeeIdSent = payEmployeeMasterByEmployeeIdSent;
       this.payEmployeeMasterByEmployeeId = payEmployeeMasterByEmployeeId;
       this.payExecutionOpen = payExecutionOpen;
       this.nvUsers = nvUsers;
       this.chkStatus = chkStatus;
       this.currDate = currDate;
       this.currTime = currTime;
       this.sendDate = sendDate;
       this.sendTime = sendTime;
       this.pickDate = pickDate;
       this.pickTime = pickTime;
       this.rmrk = rmrk;
       this.payDeserveEmpFileDtlRufs = payDeserveEmpFileDtlRufs;
       this.payDeserveEmpFileDtls = payDeserveEmpFileDtls;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="openMm", column=@Column(name="OPEN_MM", nullable=false, precision=2, scale=0) ), 
        @AttributeOverride(name="openYyyy", column=@Column(name="OPEN_YYYY", nullable=false, precision=4, scale=0) ), 
        @AttributeOverride(name="locCode", column=@Column(name="LOC_CODE", nullable=false, length=3) ), 
        @AttributeOverride(name="bandType", column=@Column(name="BAND_TYPE", nullable=false, precision=2, scale=0) ), 
        @AttributeOverride(name="locationCode", column=@Column(name="LOCATION_CODE", nullable=false, length=3) ), 
        @AttributeOverride(name="bandCode", column=@Column(name="BAND_CODE", nullable=false, precision=4, scale=0) ) } )
    public PayDeserveEmpFileId getId() {
        return this.id;
    }
    
    public void setId(PayDeserveEmpFileId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="BAND_TYPE", referencedColumnName="BAND_TYPE", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="BAND_CODE", referencedColumnName="BAND_CODE", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="LOC_CODE", referencedColumnName="LOC_CODE", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="LOCATION_CODE", referencedColumnName="LOCATION_CODE", nullable=false, insertable=false, updatable=false) } )
    public PayLocationBandFile getPayLocationBandFile() {
        return this.payLocationBandFile;
    }
    
    public void setPayLocationBandFile(PayLocationBandFile payLocationBandFile) {
        this.payLocationBandFile = payLocationBandFile;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMPLOYEE_ID_SENT")
    public PayEmployeeMaster getPayEmployeeMasterByEmployeeIdSent() {
        return this.payEmployeeMasterByEmployeeIdSent;
    }
    
    public void setPayEmployeeMasterByEmployeeIdSent(PayEmployeeMaster payEmployeeMasterByEmployeeIdSent) {
        this.payEmployeeMasterByEmployeeIdSent = payEmployeeMasterByEmployeeIdSent;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EMPLOYEE_ID")
    public PayEmployeeMaster getPayEmployeeMasterByEmployeeId() {
        return this.payEmployeeMasterByEmployeeId;
    }
    
    public void setPayEmployeeMasterByEmployeeId(PayEmployeeMaster payEmployeeMasterByEmployeeId) {
        this.payEmployeeMasterByEmployeeId = payEmployeeMasterByEmployeeId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="OPEN_MM", referencedColumnName="OPEN_MM", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="OPEN_YYYY", referencedColumnName="OPEN_YYYY", nullable=false, insertable=false, updatable=false) } )
    public PayExecutionOpen getPayExecutionOpen() {
        return this.payExecutionOpen;
    }
    
    public void setPayExecutionOpen(PayExecutionOpen payExecutionOpen) {
        this.payExecutionOpen = payExecutionOpen;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="USER_ID")
    public NvUsers getNvUsers() {
        return this.nvUsers;
    }
    
    public void setNvUsers(NvUsers nvUsers) {
        this.nvUsers = nvUsers;
    }

    
    @Column(name="CHK_STATUS", precision=2, scale=0)
    public Byte getChkStatus() {
        return this.chkStatus;
    }
    
    public void setChkStatus(Byte chkStatus) {
        this.chkStatus = chkStatus;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="CURR_DATE", length=7)
    public Date getCurrDate() {
        return this.currDate;
    }
    
    public void setCurrDate(Date currDate) {
        this.currDate = currDate;
    }

    
    @Column(name="CURR_TIME", length=40)
    public String getCurrTime() {
        return this.currTime;
    }
    
    public void setCurrTime(String currTime) {
        this.currTime = currTime;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="SEND_DATE", length=7)
    public Date getSendDate() {
        return this.sendDate;
    }
    
    public void setSendDate(Date sendDate) {
        this.sendDate = sendDate;
    }

    
    @Column(name="SEND_TIME", length=40)
    public String getSendTime() {
        return this.sendTime;
    }
    
    public void setSendTime(String sendTime) {
        this.sendTime = sendTime;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="PICK_DATE", length=7)
    public Date getPickDate() {
        return this.pickDate;
    }
    
    public void setPickDate(Date pickDate) {
        this.pickDate = pickDate;
    }

    
    @Column(name="PICK_TIME", length=40)
    public String getPickTime() {
        return this.pickTime;
    }
    
    public void setPickTime(String pickTime) {
        this.pickTime = pickTime;
    }

    
    @Column(name="RMRK", length=200)
    public String getRmrk() {
        return this.rmrk;
    }
    
    public void setRmrk(String rmrk) {
        this.rmrk = rmrk;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="payDeserveEmpFile")
    public Set<PayDeserveEmpFileDtlRuf> getPayDeserveEmpFileDtlRufs() {
        return this.payDeserveEmpFileDtlRufs;
    }
    
    public void setPayDeserveEmpFileDtlRufs(Set<PayDeserveEmpFileDtlRuf> payDeserveEmpFileDtlRufs) {
        this.payDeserveEmpFileDtlRufs = payDeserveEmpFileDtlRufs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="payDeserveEmpFile")
    public Set<PayDeserveEmpFileDtl> getPayDeserveEmpFileDtls() {
        return this.payDeserveEmpFileDtls;
    }
    
    public void setPayDeserveEmpFileDtls(Set<PayDeserveEmpFileDtl> payDeserveEmpFileDtls) {
        this.payDeserveEmpFileDtls = payDeserveEmpFileDtls;
    }




}


