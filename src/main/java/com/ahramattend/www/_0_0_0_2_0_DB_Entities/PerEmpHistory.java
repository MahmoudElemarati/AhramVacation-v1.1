package com.ahramattend.www._0_0_0_2_0_DB_Entities;
// Generated Feb 23, 2021 6:24:44 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PerEmpHistory generated by hbm2java
 */
@Entity
@Table(name="PER_EMP_HISTORY"
    ,schema="SHAMS"
)
public class PerEmpHistory  implements java.io.Serializable {


     private PerEmpHistoryId id;
     private PerFiscalDegreeCode perFiscalDegreeCode;
     private PerFiscalDegreeCodeNew perFiscalDegreeCodeNew;
     private PerGeneralCode perGeneralCode;
     private PerGroupTypeCode perGroupTypeCode;
     private PerJobCode perJobCodeByJobCode;
     private PerJobCode perJobCodeByJobCodeTransfer;
     private PerJobLaw perJobLaw;
     private PerLocationCodes perLocationCodesByPerehPerlcFromFk;
     private PerLocationCodes perLocationCodesByPerehPerlcFk;
     private PerMosqueCode perMosqueCode;
     private PerOrganizationStructure perOrganizationStructureByOrgId;
     private PerOrganizationStructure perOrganizationStructureByOrgIdFrom;
     private PerOrgunitCode perOrgunitCodeByOrgunitCodeFrom;
     private PerOrgunitCode perOrgunitCodeByOrgunitCode;
     private PerExternalSideCode perExternalSideCodeByPerehPerescFk;
     private PerExternalSideCode perExternalSideCodeByPerehPerescFromFk;
     private BudLocation budLocationByLocationCodeFrom;
     private BudLocation budLocationByLocationCode;
     private BudProjectSub budProjectSubByPerehBudProjSFromFk;
     private BudProjectSub budProjectSubByPerehBudProjSFk;
     private PerAttendanceWrkTypeDetail perAttendanceWrkTypeDetail;
     private PerEmploymentMasters perEmploymentMasters;
     private PerEmploymentParameter perEmploymentParameter;
     private Date transDate;
     private Date degreeDate;
     private Date jobDate;
     private Date degreePriorityDate;
     private Integer degreePriority;
     private Boolean empJobFlag;
     private Boolean empJobFlagNew;
     private BigDecimal basicSalaryValue;
     private BigDecimal salaryValue;
     private BigDecimal contractValue;
     private Boolean elawaType;
     private Date elawaDate;
     private BigDecimal elawaValue;
     private String decisionNo;
     private Date decisionDate;
     private Boolean orgFlag;
     private Boolean orgFlagFrom;
     private String wrkTypeDecisionNo;
     private Date wrkTypeDecisionDate;
     private Date wrkTypeFromDate;
     private Date wrkTypeToDate;
     private String wrkTypeNotes;
     private Date jobDateTransfer;
     private Boolean cadreKind;
     private Byte statusCode;
     private Boolean chkEntryData;
     private String recordCreateUser;
     private Date recordUpdateDate;
     private Date recordCreateDate;
     private String recordUpdateUser;
     private BigDecimal jobSalaryValue;

    public PerEmpHistory() {
    }

	
    public PerEmpHistory(PerEmpHistoryId id, PerGeneralCode perGeneralCode, PerJobCode perJobCodeByJobCode, PerEmploymentMasters perEmploymentMasters, Date transDate) {
        this.id = id;
        this.perGeneralCode = perGeneralCode;
        this.perJobCodeByJobCode = perJobCodeByJobCode;
        this.perEmploymentMasters = perEmploymentMasters;
        this.transDate = transDate;
    }
    public PerEmpHistory(PerEmpHistoryId id, PerFiscalDegreeCode perFiscalDegreeCode, PerFiscalDegreeCodeNew perFiscalDegreeCodeNew, PerGeneralCode perGeneralCode, PerGroupTypeCode perGroupTypeCode, PerJobCode perJobCodeByJobCode, PerJobCode perJobCodeByJobCodeTransfer, PerJobLaw perJobLaw, PerLocationCodes perLocationCodesByPerehPerlcFromFk, PerLocationCodes perLocationCodesByPerehPerlcFk, PerMosqueCode perMosqueCode, PerOrganizationStructure perOrganizationStructureByOrgId, PerOrganizationStructure perOrganizationStructureByOrgIdFrom, PerOrgunitCode perOrgunitCodeByOrgunitCodeFrom, PerOrgunitCode perOrgunitCodeByOrgunitCode, PerExternalSideCode perExternalSideCodeByPerehPerescFk, PerExternalSideCode perExternalSideCodeByPerehPerescFromFk, BudLocation budLocationByLocationCodeFrom, BudLocation budLocationByLocationCode, BudProjectSub budProjectSubByPerehBudProjSFromFk, BudProjectSub budProjectSubByPerehBudProjSFk, PerAttendanceWrkTypeDetail perAttendanceWrkTypeDetail, PerEmploymentMasters perEmploymentMasters, PerEmploymentParameter perEmploymentParameter, Date transDate, Date degreeDate, Date jobDate, Date degreePriorityDate, Integer degreePriority, Boolean empJobFlag, Boolean empJobFlagNew, BigDecimal basicSalaryValue, BigDecimal salaryValue, BigDecimal contractValue, Boolean elawaType, Date elawaDate, BigDecimal elawaValue, String decisionNo, Date decisionDate, Boolean orgFlag, Boolean orgFlagFrom, String wrkTypeDecisionNo, Date wrkTypeDecisionDate, Date wrkTypeFromDate, Date wrkTypeToDate, String wrkTypeNotes, Date jobDateTransfer, Boolean cadreKind, Byte statusCode, Boolean chkEntryData, String recordCreateUser, Date recordUpdateDate, Date recordCreateDate, String recordUpdateUser, BigDecimal jobSalaryValue) {
       this.id = id;
       this.perFiscalDegreeCode = perFiscalDegreeCode;
       this.perFiscalDegreeCodeNew = perFiscalDegreeCodeNew;
       this.perGeneralCode = perGeneralCode;
       this.perGroupTypeCode = perGroupTypeCode;
       this.perJobCodeByJobCode = perJobCodeByJobCode;
       this.perJobCodeByJobCodeTransfer = perJobCodeByJobCodeTransfer;
       this.perJobLaw = perJobLaw;
       this.perLocationCodesByPerehPerlcFromFk = perLocationCodesByPerehPerlcFromFk;
       this.perLocationCodesByPerehPerlcFk = perLocationCodesByPerehPerlcFk;
       this.perMosqueCode = perMosqueCode;
       this.perOrganizationStructureByOrgId = perOrganizationStructureByOrgId;
       this.perOrganizationStructureByOrgIdFrom = perOrganizationStructureByOrgIdFrom;
       this.perOrgunitCodeByOrgunitCodeFrom = perOrgunitCodeByOrgunitCodeFrom;
       this.perOrgunitCodeByOrgunitCode = perOrgunitCodeByOrgunitCode;
       this.perExternalSideCodeByPerehPerescFk = perExternalSideCodeByPerehPerescFk;
       this.perExternalSideCodeByPerehPerescFromFk = perExternalSideCodeByPerehPerescFromFk;
       this.budLocationByLocationCodeFrom = budLocationByLocationCodeFrom;
       this.budLocationByLocationCode = budLocationByLocationCode;
       this.budProjectSubByPerehBudProjSFromFk = budProjectSubByPerehBudProjSFromFk;
       this.budProjectSubByPerehBudProjSFk = budProjectSubByPerehBudProjSFk;
       this.perAttendanceWrkTypeDetail = perAttendanceWrkTypeDetail;
       this.perEmploymentMasters = perEmploymentMasters;
       this.perEmploymentParameter = perEmploymentParameter;
       this.transDate = transDate;
       this.degreeDate = degreeDate;
       this.jobDate = jobDate;
       this.degreePriorityDate = degreePriorityDate;
       this.degreePriority = degreePriority;
       this.empJobFlag = empJobFlag;
       this.empJobFlagNew = empJobFlagNew;
       this.basicSalaryValue = basicSalaryValue;
       this.salaryValue = salaryValue;
       this.contractValue = contractValue;
       this.elawaType = elawaType;
       this.elawaDate = elawaDate;
       this.elawaValue = elawaValue;
       this.decisionNo = decisionNo;
       this.decisionDate = decisionDate;
       this.orgFlag = orgFlag;
       this.orgFlagFrom = orgFlagFrom;
       this.wrkTypeDecisionNo = wrkTypeDecisionNo;
       this.wrkTypeDecisionDate = wrkTypeDecisionDate;
       this.wrkTypeFromDate = wrkTypeFromDate;
       this.wrkTypeToDate = wrkTypeToDate;
       this.wrkTypeNotes = wrkTypeNotes;
       this.jobDateTransfer = jobDateTransfer;
       this.cadreKind = cadreKind;
       this.statusCode = statusCode;
       this.chkEntryData = chkEntryData;
       this.recordCreateUser = recordCreateUser;
       this.recordUpdateDate = recordUpdateDate;
       this.recordCreateDate = recordCreateDate;
       this.recordUpdateUser = recordUpdateUser;
       this.jobSalaryValue = jobSalaryValue;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="employeeId", column=@Column(name="EMPLOYEE_ID", nullable=false, length=10) ), 
        @AttributeOverride(name="transId", column=@Column(name="TRANS_ID", nullable=false, precision=3, scale=0) ) } )
    public PerEmpHistoryId getId() {
        return this.id;
    }
    
    public void setId(PerEmpHistoryId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FISCAL_DEGREE_CODE")
    public PerFiscalDegreeCode getPerFiscalDegreeCode() {
        return this.perFiscalDegreeCode;
    }
    
    public void setPerFiscalDegreeCode(PerFiscalDegreeCode perFiscalDegreeCode) {
        this.perFiscalDegreeCode = perFiscalDegreeCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FISCAL_DEGREE_CODE_NEW")
    public PerFiscalDegreeCodeNew getPerFiscalDegreeCodeNew() {
        return this.perFiscalDegreeCodeNew;
    }
    
    public void setPerFiscalDegreeCodeNew(PerFiscalDegreeCodeNew perFiscalDegreeCodeNew) {
        this.perFiscalDegreeCodeNew = perFiscalDegreeCodeNew;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="GENERAL_CODE", nullable=false)
    public PerGeneralCode getPerGeneralCode() {
        return this.perGeneralCode;
    }
    
    public void setPerGeneralCode(PerGeneralCode perGeneralCode) {
        this.perGeneralCode = perGeneralCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="GROUP_TYPE_CODE")
    public PerGroupTypeCode getPerGroupTypeCode() {
        return this.perGroupTypeCode;
    }
    
    public void setPerGroupTypeCode(PerGroupTypeCode perGroupTypeCode) {
        this.perGroupTypeCode = perGroupTypeCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="JOB_CODE", nullable=false)
    public PerJobCode getPerJobCodeByJobCode() {
        return this.perJobCodeByJobCode;
    }
    
    public void setPerJobCodeByJobCode(PerJobCode perJobCodeByJobCode) {
        this.perJobCodeByJobCode = perJobCodeByJobCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="JOB_CODE_TRANSFER")
    public PerJobCode getPerJobCodeByJobCodeTransfer() {
        return this.perJobCodeByJobCodeTransfer;
    }
    
    public void setPerJobCodeByJobCodeTransfer(PerJobCode perJobCodeByJobCodeTransfer) {
        this.perJobCodeByJobCodeTransfer = perJobCodeByJobCodeTransfer;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="LAW_SEQ")
    public PerJobLaw getPerJobLaw() {
        return this.perJobLaw;
    }
    
    public void setPerJobLaw(PerJobLaw perJobLaw) {
        this.perJobLaw = perJobLaw;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="LOC_CODE_FROM", referencedColumnName="LOC_CODE"), 
        @JoinColumn(name="LOCATION_CODE_FROM", referencedColumnName="LOCATION_CODE") } )
    public PerLocationCodes getPerLocationCodesByPerehPerlcFromFk() {
        return this.perLocationCodesByPerehPerlcFromFk;
    }
    
    public void setPerLocationCodesByPerehPerlcFromFk(PerLocationCodes perLocationCodesByPerehPerlcFromFk) {
        this.perLocationCodesByPerehPerlcFromFk = perLocationCodesByPerehPerlcFromFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="LOC_CODE", referencedColumnName="LOC_CODE"), 
        @JoinColumn(name="LOCATION_CODE", referencedColumnName="LOCATION_CODE") } )
    public PerLocationCodes getPerLocationCodesByPerehPerlcFk() {
        return this.perLocationCodesByPerehPerlcFk;
    }
    
    public void setPerLocationCodesByPerehPerlcFk(PerLocationCodes perLocationCodesByPerehPerlcFk) {
        this.perLocationCodesByPerehPerlcFk = perLocationCodesByPerehPerlcFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="MOSQUE_CODE")
    public PerMosqueCode getPerMosqueCode() {
        return this.perMosqueCode;
    }
    
    public void setPerMosqueCode(PerMosqueCode perMosqueCode) {
        this.perMosqueCode = perMosqueCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ORG_ID")
    public PerOrganizationStructure getPerOrganizationStructureByOrgId() {
        return this.perOrganizationStructureByOrgId;
    }
    
    public void setPerOrganizationStructureByOrgId(PerOrganizationStructure perOrganizationStructureByOrgId) {
        this.perOrganizationStructureByOrgId = perOrganizationStructureByOrgId;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ORG_ID_FROM")
    public PerOrganizationStructure getPerOrganizationStructureByOrgIdFrom() {
        return this.perOrganizationStructureByOrgIdFrom;
    }
    
    public void setPerOrganizationStructureByOrgIdFrom(PerOrganizationStructure perOrganizationStructureByOrgIdFrom) {
        this.perOrganizationStructureByOrgIdFrom = perOrganizationStructureByOrgIdFrom;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ORGUNIT_CODE_FROM")
    public PerOrgunitCode getPerOrgunitCodeByOrgunitCodeFrom() {
        return this.perOrgunitCodeByOrgunitCodeFrom;
    }
    
    public void setPerOrgunitCodeByOrgunitCodeFrom(PerOrgunitCode perOrgunitCodeByOrgunitCodeFrom) {
        this.perOrgunitCodeByOrgunitCodeFrom = perOrgunitCodeByOrgunitCodeFrom;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="ORGUNIT_CODE")
    public PerOrgunitCode getPerOrgunitCodeByOrgunitCode() {
        return this.perOrgunitCodeByOrgunitCode;
    }
    
    public void setPerOrgunitCodeByOrgunitCode(PerOrgunitCode perOrgunitCodeByOrgunitCode) {
        this.perOrgunitCodeByOrgunitCode = perOrgunitCodeByOrgunitCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="COUNTRY_CODE", referencedColumnName="COUNTRY_CODE"), 
        @JoinColumn(name="EXTERNAL_SIDE_CODE", referencedColumnName="EXTERNAL_SIDE_CODE") } )
    public PerExternalSideCode getPerExternalSideCodeByPerehPerescFk() {
        return this.perExternalSideCodeByPerehPerescFk;
    }
    
    public void setPerExternalSideCodeByPerehPerescFk(PerExternalSideCode perExternalSideCodeByPerehPerescFk) {
        this.perExternalSideCodeByPerehPerescFk = perExternalSideCodeByPerehPerescFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="COUNTRY_CODE_FROM", referencedColumnName="COUNTRY_CODE"), 
        @JoinColumn(name="EXTERNAL_SIDE_CODE_FROM", referencedColumnName="EXTERNAL_SIDE_CODE") } )
    public PerExternalSideCode getPerExternalSideCodeByPerehPerescFromFk() {
        return this.perExternalSideCodeByPerehPerescFromFk;
    }
    
    public void setPerExternalSideCodeByPerehPerescFromFk(PerExternalSideCode perExternalSideCodeByPerehPerescFromFk) {
        this.perExternalSideCodeByPerehPerescFromFk = perExternalSideCodeByPerehPerescFromFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="LOCATION_CODE_FROM", insertable=false, updatable=false)
    public BudLocation getBudLocationByLocationCodeFrom() {
        return this.budLocationByLocationCodeFrom;
    }
    
    public void setBudLocationByLocationCodeFrom(BudLocation budLocationByLocationCodeFrom) {
        this.budLocationByLocationCodeFrom = budLocationByLocationCodeFrom;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="LOCATION_CODE", insertable=false, updatable=false)
    public BudLocation getBudLocationByLocationCode() {
        return this.budLocationByLocationCode;
    }
    
    public void setBudLocationByLocationCode(BudLocation budLocationByLocationCode) {
        this.budLocationByLocationCode = budLocationByLocationCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="PROJECT_CODE_FROM", referencedColumnName="PROJECT_CODE"), 
        @JoinColumn(name="PROJECT_SUB_CODE_FROM", referencedColumnName="PROJECT_SUB_CODE") } )
    public BudProjectSub getBudProjectSubByPerehBudProjSFromFk() {
        return this.budProjectSubByPerehBudProjSFromFk;
    }
    
    public void setBudProjectSubByPerehBudProjSFromFk(BudProjectSub budProjectSubByPerehBudProjSFromFk) {
        this.budProjectSubByPerehBudProjSFromFk = budProjectSubByPerehBudProjSFromFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="PROJECT_CODE", referencedColumnName="PROJECT_CODE"), 
        @JoinColumn(name="PROJECT_SUB_CODE", referencedColumnName="PROJECT_SUB_CODE") } )
    public BudProjectSub getBudProjectSubByPerehBudProjSFk() {
        return this.budProjectSubByPerehBudProjSFk;
    }
    
    public void setBudProjectSubByPerehBudProjSFk(BudProjectSub budProjectSubByPerehBudProjSFk) {
        this.budProjectSubByPerehBudProjSFk = budProjectSubByPerehBudProjSFk;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="WORK_TYPE_CODE", referencedColumnName="WORK_TYPE_CODE"), 
        @JoinColumn(name="WORK_TYPE_SEQ", referencedColumnName="WORK_TYPE_SEQ") } )
    public PerAttendanceWrkTypeDetail getPerAttendanceWrkTypeDetail() {
        return this.perAttendanceWrkTypeDetail;
    }
    
    public void setPerAttendanceWrkTypeDetail(PerAttendanceWrkTypeDetail perAttendanceWrkTypeDetail) {
        this.perAttendanceWrkTypeDetail = perAttendanceWrkTypeDetail;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="EMPLOYEE_ID", nullable=false, insertable=false, updatable=false)
    public PerEmploymentMasters getPerEmploymentMasters() {
        return this.perEmploymentMasters;
    }
    
    public void setPerEmploymentMasters(PerEmploymentMasters perEmploymentMasters) {
        this.perEmploymentMasters = perEmploymentMasters;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="EMPLOYMENT_SOURCE_CODE")
    public PerEmploymentParameter getPerEmploymentParameter() {
        return this.perEmploymentParameter;
    }
    
    public void setPerEmploymentParameter(PerEmploymentParameter perEmploymentParameter) {
        this.perEmploymentParameter = perEmploymentParameter;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="TRANS_DATE", nullable=false, length=7)
    public Date getTransDate() {
        return this.transDate;
    }
    
    public void setTransDate(Date transDate) {
        this.transDate = transDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DEGREE_DATE", length=7)
    public Date getDegreeDate() {
        return this.degreeDate;
    }
    
    public void setDegreeDate(Date degreeDate) {
        this.degreeDate = degreeDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="JOB_DATE", length=7)
    public Date getJobDate() {
        return this.jobDate;
    }
    
    public void setJobDate(Date jobDate) {
        this.jobDate = jobDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DEGREE_PRIORITY_DATE", length=7)
    public Date getDegreePriorityDate() {
        return this.degreePriorityDate;
    }
    
    public void setDegreePriorityDate(Date degreePriorityDate) {
        this.degreePriorityDate = degreePriorityDate;
    }

    
    @Column(name="DEGREE_PRIORITY", precision=5, scale=0)
    public Integer getDegreePriority() {
        return this.degreePriority;
    }
    
    public void setDegreePriority(Integer degreePriority) {
        this.degreePriority = degreePriority;
    }

    
    @Column(name="EMP_JOB_FLAG", precision=1, scale=0)
    public Boolean getEmpJobFlag() {
        return this.empJobFlag;
    }
    
    public void setEmpJobFlag(Boolean empJobFlag) {
        this.empJobFlag = empJobFlag;
    }

    
    @Column(name="EMP_JOB_FLAG_NEW", precision=1, scale=0)
    public Boolean getEmpJobFlagNew() {
        return this.empJobFlagNew;
    }
    
    public void setEmpJobFlagNew(Boolean empJobFlagNew) {
        this.empJobFlagNew = empJobFlagNew;
    }

    
    @Column(name="BASIC_SALARY_VALUE", precision=9)
    public BigDecimal getBasicSalaryValue() {
        return this.basicSalaryValue;
    }
    
    public void setBasicSalaryValue(BigDecimal basicSalaryValue) {
        this.basicSalaryValue = basicSalaryValue;
    }

    
    @Column(name="SALARY_VALUE", precision=9)
    public BigDecimal getSalaryValue() {
        return this.salaryValue;
    }
    
    public void setSalaryValue(BigDecimal salaryValue) {
        this.salaryValue = salaryValue;
    }

    
    @Column(name="CONTRACT_VALUE", precision=9)
    public BigDecimal getContractValue() {
        return this.contractValue;
    }
    
    public void setContractValue(BigDecimal contractValue) {
        this.contractValue = contractValue;
    }

    
    @Column(name="ELAWA_TYPE", precision=1, scale=0)
    public Boolean getElawaType() {
        return this.elawaType;
    }
    
    public void setElawaType(Boolean elawaType) {
        this.elawaType = elawaType;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ELAWA_DATE", length=7)
    public Date getElawaDate() {
        return this.elawaDate;
    }
    
    public void setElawaDate(Date elawaDate) {
        this.elawaDate = elawaDate;
    }

    
    @Column(name="ELAWA_VALUE", precision=9)
    public BigDecimal getElawaValue() {
        return this.elawaValue;
    }
    
    public void setElawaValue(BigDecimal elawaValue) {
        this.elawaValue = elawaValue;
    }

    
    @Column(name="DECISION_NO", length=30)
    public String getDecisionNo() {
        return this.decisionNo;
    }
    
    public void setDecisionNo(String decisionNo) {
        this.decisionNo = decisionNo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DECISION_DATE", length=7)
    public Date getDecisionDate() {
        return this.decisionDate;
    }
    
    public void setDecisionDate(Date decisionDate) {
        this.decisionDate = decisionDate;
    }

    
    @Column(name="ORG_FLAG", precision=1, scale=0)
    public Boolean getOrgFlag() {
        return this.orgFlag;
    }
    
    public void setOrgFlag(Boolean orgFlag) {
        this.orgFlag = orgFlag;
    }

    
    @Column(name="ORG_FLAG_FROM", precision=1, scale=0)
    public Boolean getOrgFlagFrom() {
        return this.orgFlagFrom;
    }
    
    public void setOrgFlagFrom(Boolean orgFlagFrom) {
        this.orgFlagFrom = orgFlagFrom;
    }

    
    @Column(name="WRK_TYPE_DECISION_NO", length=15)
    public String getWrkTypeDecisionNo() {
        return this.wrkTypeDecisionNo;
    }
    
    public void setWrkTypeDecisionNo(String wrkTypeDecisionNo) {
        this.wrkTypeDecisionNo = wrkTypeDecisionNo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="WRK_TYPE_DECISION_DATE", length=7)
    public Date getWrkTypeDecisionDate() {
        return this.wrkTypeDecisionDate;
    }
    
    public void setWrkTypeDecisionDate(Date wrkTypeDecisionDate) {
        this.wrkTypeDecisionDate = wrkTypeDecisionDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="WRK_TYPE_FROM_DATE", length=7)
    public Date getWrkTypeFromDate() {
        return this.wrkTypeFromDate;
    }
    
    public void setWrkTypeFromDate(Date wrkTypeFromDate) {
        this.wrkTypeFromDate = wrkTypeFromDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="WRK_TYPE_TO_DATE", length=7)
    public Date getWrkTypeToDate() {
        return this.wrkTypeToDate;
    }
    
    public void setWrkTypeToDate(Date wrkTypeToDate) {
        this.wrkTypeToDate = wrkTypeToDate;
    }

    
    @Column(name="WRK_TYPE_NOTES", length=250)
    public String getWrkTypeNotes() {
        return this.wrkTypeNotes;
    }
    
    public void setWrkTypeNotes(String wrkTypeNotes) {
        this.wrkTypeNotes = wrkTypeNotes;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="JOB_DATE_TRANSFER", length=7)
    public Date getJobDateTransfer() {
        return this.jobDateTransfer;
    }
    
    public void setJobDateTransfer(Date jobDateTransfer) {
        this.jobDateTransfer = jobDateTransfer;
    }

    
    @Column(name="CADRE_KIND", precision=1, scale=0)
    public Boolean getCadreKind() {
        return this.cadreKind;
    }
    
    public void setCadreKind(Boolean cadreKind) {
        this.cadreKind = cadreKind;
    }

    
    @Column(name="STATUS_CODE", precision=2, scale=0)
    public Byte getStatusCode() {
        return this.statusCode;
    }
    
    public void setStatusCode(Byte statusCode) {
        this.statusCode = statusCode;
    }

    
    @Column(name="CHK_ENTRY_DATA", precision=1, scale=0)
    public Boolean getChkEntryData() {
        return this.chkEntryData;
    }
    
    public void setChkEntryData(Boolean chkEntryData) {
        this.chkEntryData = chkEntryData;
    }

    
    @Column(name="RECORD_CREATE_USER", length=15)
    public String getRecordCreateUser() {
        return this.recordCreateUser;
    }
    
    public void setRecordCreateUser(String recordCreateUser) {
        this.recordCreateUser = recordCreateUser;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_UPDATE_DATE", length=7)
    public Date getRecordUpdateDate() {
        return this.recordUpdateDate;
    }
    
    public void setRecordUpdateDate(Date recordUpdateDate) {
        this.recordUpdateDate = recordUpdateDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="RECORD_CREATE_DATE", length=7)
    public Date getRecordCreateDate() {
        return this.recordCreateDate;
    }
    
    public void setRecordCreateDate(Date recordCreateDate) {
        this.recordCreateDate = recordCreateDate;
    }

    
    @Column(name="RECORD_UPDATE_USER", length=15)
    public String getRecordUpdateUser() {
        return this.recordUpdateUser;
    }
    
    public void setRecordUpdateUser(String recordUpdateUser) {
        this.recordUpdateUser = recordUpdateUser;
    }

    
    @Column(name="JOB_SALARY_VALUE", precision=9)
    public BigDecimal getJobSalaryValue() {
        return this.jobSalaryValue;
    }
    
    public void setJobSalaryValue(BigDecimal jobSalaryValue) {
        this.jobSalaryValue = jobSalaryValue;
    }




}


