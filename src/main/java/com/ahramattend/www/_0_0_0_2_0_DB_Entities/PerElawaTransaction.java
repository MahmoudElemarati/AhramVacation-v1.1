package com.ahramattend.www._0_0_0_2_0_DB_Entities;
// Generated Feb 23, 2021 6:24:44 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PerElawaTransaction generated by hbm2java
 */
@Entity
@Table(name="PER_ELAWA_TRANSACTION"
    ,schema="SHAMS"
)
public class PerElawaTransaction  implements java.io.Serializable {


     private PerElawaTransactionId id;
     private PerFiscalDegreeCode perFiscalDegreeCode;
     private PerFiscalDegreeCodeNew perFiscalDegreeCodeNew;
     private PerGroupTypeCode perGroupTypeCode;
     private PerJobCode perJobCode;
     private PerLocationCodes perLocationCodes;
     private PerEmploymentMasters perEmploymentMasters;
     private Date degreeDate;
     private Date jobDate;
     private BigDecimal basicSalaryValueB;
     private BigDecimal salaryValueB;
     private boolean elawaCalc;
     private BigDecimal elawaValue;
     private BigDecimal basicSalaryValueA;
     private BigDecimal salaryValueA;
     private String constantElawaFg;
     private Boolean elawaDecisionFg;

    public PerElawaTransaction() {
    }

	
    public PerElawaTransaction(PerElawaTransactionId id, PerJobCode perJobCode, PerLocationCodes perLocationCodes, PerEmploymentMasters perEmploymentMasters, BigDecimal basicSalaryValueB, BigDecimal salaryValueB, boolean elawaCalc, BigDecimal elawaValue, BigDecimal basicSalaryValueA, BigDecimal salaryValueA) {
        this.id = id;
        this.perJobCode = perJobCode;
        this.perLocationCodes = perLocationCodes;
        this.perEmploymentMasters = perEmploymentMasters;
        this.basicSalaryValueB = basicSalaryValueB;
        this.salaryValueB = salaryValueB;
        this.elawaCalc = elawaCalc;
        this.elawaValue = elawaValue;
        this.basicSalaryValueA = basicSalaryValueA;
        this.salaryValueA = salaryValueA;
    }
    public PerElawaTransaction(PerElawaTransactionId id, PerFiscalDegreeCode perFiscalDegreeCode, PerFiscalDegreeCodeNew perFiscalDegreeCodeNew, PerGroupTypeCode perGroupTypeCode, PerJobCode perJobCode, PerLocationCodes perLocationCodes, PerEmploymentMasters perEmploymentMasters, Date degreeDate, Date jobDate, BigDecimal basicSalaryValueB, BigDecimal salaryValueB, boolean elawaCalc, BigDecimal elawaValue, BigDecimal basicSalaryValueA, BigDecimal salaryValueA, String constantElawaFg, Boolean elawaDecisionFg) {
       this.id = id;
       this.perFiscalDegreeCode = perFiscalDegreeCode;
       this.perFiscalDegreeCodeNew = perFiscalDegreeCodeNew;
       this.perGroupTypeCode = perGroupTypeCode;
       this.perJobCode = perJobCode;
       this.perLocationCodes = perLocationCodes;
       this.perEmploymentMasters = perEmploymentMasters;
       this.degreeDate = degreeDate;
       this.jobDate = jobDate;
       this.basicSalaryValueB = basicSalaryValueB;
       this.salaryValueB = salaryValueB;
       this.elawaCalc = elawaCalc;
       this.elawaValue = elawaValue;
       this.basicSalaryValueA = basicSalaryValueA;
       this.salaryValueA = salaryValueA;
       this.constantElawaFg = constantElawaFg;
       this.elawaDecisionFg = elawaDecisionFg;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="locationCode", column=@Column(name="LOCATION_CODE", nullable=false, length=3) ), 
        @AttributeOverride(name="elawaDate", column=@Column(name="ELAWA_DATE", nullable=false, length=7) ), 
        @AttributeOverride(name="elawaTypeCode", column=@Column(name="ELAWA_TYPE_CODE", nullable=false, length=2) ), 
        @AttributeOverride(name="employeeId", column=@Column(name="EMPLOYEE_ID", nullable=false, length=10) ) } )
    public PerElawaTransactionId getId() {
        return this.id;
    }
    
    public void setId(PerElawaTransactionId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FISCAL_DEGREE_CODE")
    public PerFiscalDegreeCode getPerFiscalDegreeCode() {
        return this.perFiscalDegreeCode;
    }
    
    public void setPerFiscalDegreeCode(PerFiscalDegreeCode perFiscalDegreeCode) {
        this.perFiscalDegreeCode = perFiscalDegreeCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FISCAL_DEGREE_CODE_NEW")
    public PerFiscalDegreeCodeNew getPerFiscalDegreeCodeNew() {
        return this.perFiscalDegreeCodeNew;
    }
    
    public void setPerFiscalDegreeCodeNew(PerFiscalDegreeCodeNew perFiscalDegreeCodeNew) {
        this.perFiscalDegreeCodeNew = perFiscalDegreeCodeNew;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="GROUP_TYPE_CODE")
    public PerGroupTypeCode getPerGroupTypeCode() {
        return this.perGroupTypeCode;
    }
    
    public void setPerGroupTypeCode(PerGroupTypeCode perGroupTypeCode) {
        this.perGroupTypeCode = perGroupTypeCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="JOB_CODE", nullable=false)
    public PerJobCode getPerJobCode() {
        return this.perJobCode;
    }
    
    public void setPerJobCode(PerJobCode perJobCode) {
        this.perJobCode = perJobCode;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumns( { 
        @JoinColumn(name="LOC_CODE", referencedColumnName="LOC_CODE", insertable=false, updatable=false), 
        @JoinColumn(name="LOCATION_CODE", referencedColumnName="LOCATION_CODE", nullable=false, insertable=false, updatable=false) } )
    public PerLocationCodes getPerLocationCodes() {
        return this.perLocationCodes;
    }
    
    public void setPerLocationCodes(PerLocationCodes perLocationCodes) {
        this.perLocationCodes = perLocationCodes;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="EMPLOYEE_ID", nullable=false, insertable=false, updatable=false)
    public PerEmploymentMasters getPerEmploymentMasters() {
        return this.perEmploymentMasters;
    }
    
    public void setPerEmploymentMasters(PerEmploymentMasters perEmploymentMasters) {
        this.perEmploymentMasters = perEmploymentMasters;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="DEGREE_DATE", length=7)
    public Date getDegreeDate() {
        return this.degreeDate;
    }
    
    public void setDegreeDate(Date degreeDate) {
        this.degreeDate = degreeDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="JOB_DATE", length=7)
    public Date getJobDate() {
        return this.jobDate;
    }
    
    public void setJobDate(Date jobDate) {
        this.jobDate = jobDate;
    }

    
    @Column(name="BASIC_SALARY_VALUE_B", nullable=false, precision=9)
    public BigDecimal getBasicSalaryValueB() {
        return this.basicSalaryValueB;
    }
    
    public void setBasicSalaryValueB(BigDecimal basicSalaryValueB) {
        this.basicSalaryValueB = basicSalaryValueB;
    }

    
    @Column(name="SALARY_VALUE_B", nullable=false, precision=9)
    public BigDecimal getSalaryValueB() {
        return this.salaryValueB;
    }
    
    public void setSalaryValueB(BigDecimal salaryValueB) {
        this.salaryValueB = salaryValueB;
    }

    
    @Column(name="ELAWA_CALC", nullable=false, precision=1, scale=0)
    public boolean isElawaCalc() {
        return this.elawaCalc;
    }
    
    public void setElawaCalc(boolean elawaCalc) {
        this.elawaCalc = elawaCalc;
    }

    
    @Column(name="ELAWA_VALUE", nullable=false, precision=9)
    public BigDecimal getElawaValue() {
        return this.elawaValue;
    }
    
    public void setElawaValue(BigDecimal elawaValue) {
        this.elawaValue = elawaValue;
    }

    
    @Column(name="BASIC_SALARY_VALUE_A", nullable=false, precision=9)
    public BigDecimal getBasicSalaryValueA() {
        return this.basicSalaryValueA;
    }
    
    public void setBasicSalaryValueA(BigDecimal basicSalaryValueA) {
        this.basicSalaryValueA = basicSalaryValueA;
    }

    
    @Column(name="SALARY_VALUE_A", nullable=false, precision=9)
    public BigDecimal getSalaryValueA() {
        return this.salaryValueA;
    }
    
    public void setSalaryValueA(BigDecimal salaryValueA) {
        this.salaryValueA = salaryValueA;
    }

    
    @Column(name="CONSTANT_ELAWA_FG", length=1)
    public String getConstantElawaFg() {
        return this.constantElawaFg;
    }
    
    public void setConstantElawaFg(String constantElawaFg) {
        this.constantElawaFg = constantElawaFg;
    }

    
    @Column(name="ELAWA_DECISION_FG", precision=1, scale=0)
    public Boolean getElawaDecisionFg() {
        return this.elawaDecisionFg;
    }
    
    public void setElawaDecisionFg(Boolean elawaDecisionFg) {
        this.elawaDecisionFg = elawaDecisionFg;
    }




}


